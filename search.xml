<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>算法设计与分析第三章作业</title>
      <link href="/2023/03/15/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90%E7%AC%AC%E4%B8%89%E7%AB%A0%E4%BD%9C%E4%B8%9A/"/>
      <url>/2023/03/15/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90%E7%AC%AC%E4%B8%89%E7%AB%A0%E4%BD%9C%E4%B8%9A/</url>
      
        <content type="html"><![CDATA[<h3 id="3-10"><a href="#3-10" class="headerlink" title="3 - 10"></a>3 - 10</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> mx = INT_MIN,min0 = INT_MAX;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">mn</span><span class="params">(<span class="type">int</span> a[],<span class="type">int</span> l,<span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r)</span><br><span class="line">&#123;</span><br><span class="line">mx =<span class="built_in">max</span>(mx,a[l]);</span><br><span class="line">min0 =<span class="built_in">min</span>(min0,a[l]);</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>( l == r - <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">mx =<span class="built_in">max</span>(mx,<span class="built_in">max</span>(a[l],a[r]));</span><br><span class="line">min0=<span class="built_in">min</span>(min0,<span class="built_in">min</span>(a[l],a[r]));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="type">int</span> mid = l + r &gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">mn</span>(a,l,mid);</span><br><span class="line"><span class="built_in">mn</span>(a,mid +<span class="number">1</span> ,r);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++) cin&gt;&gt;a[i];</span><br><span class="line"></span><br><span class="line"><span class="built_in">mn</span>(a,<span class="number">0</span>,n<span class="number">-1</span>);</span><br><span class="line">cout&lt;&lt;mx&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;min0;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-11"><a href="#3-11" class="headerlink" title="3- 11"></a>3- 11</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> ans;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">f</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(n == <span class="number">1</span>)</span><br><span class="line">&#123; </span><br><span class="line">   ans = x;</span><br><span class="line">   <span class="keyword">return</span> ;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(n %<span class="number">2</span> ==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">f</span>(x,n/<span class="number">2</span>);</span><br><span class="line">ans = ans *ans;</span><br><span class="line"> &#125; </span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line"> &#123;</span><br><span class="line"> <span class="built_in">f</span>(x,(n<span class="number">-1</span>) / <span class="number">2</span>);</span><br><span class="line"> ans =ans*ans*x;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n,x;</span><br><span class="line">cin&gt;&gt;x&gt;&gt;n;</span><br><span class="line"><span class="built_in">f</span>(x,n);</span><br><span class="line">cout&lt;&lt;ans;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-12"><a href="#3-12" class="headerlink" title="3 -12"></a>3 -12</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">BiTNode</span>&#123;</span><br><span class="line"><span class="type">int</span> v;</span><br><span class="line">BiTNode *lc,*rc;</span><br><span class="line">&#125;BiTNode , * BiTree;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CreatTree</span><span class="params">(BiTree &amp;T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line">cin&gt;&gt;x;</span><br><span class="line"><span class="keyword">if</span>(x == <span class="number">-1</span>) </span><br><span class="line">&#123;</span><br><span class="line">T = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">   T = <span class="keyword">new</span> BiTNode;</span><br><span class="line">T -&gt; v =x;</span><br><span class="line"></span><br><span class="line"><span class="built_in">CreatTree</span>(T -&gt; lc);</span><br><span class="line"><span class="built_in">CreatTree</span>(T -&gt; rc); </span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">depth</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(T ==<span class="literal">NULL</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> lh = <span class="built_in">depth</span>(T -&gt; lc);</span><br><span class="line"><span class="type">int</span> rh =<span class="built_in">depth</span>(T -&gt; rc);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(lh &gt; rh) <span class="keyword">return</span> lh +<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> rh +<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"> &#125; </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">BiTree T;</span><br><span class="line"><span class="built_in">CreatTree</span>(T);</span><br><span class="line">cout&lt;&lt;<span class="built_in">depth</span>(T);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-13"><a href="#3-13" class="headerlink" title="3 -13"></a>3 -13</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">BiTNode</span>&#123;</span><br><span class="line"><span class="type">int</span> v;</span><br><span class="line">BiTNode *lc,*rc;</span><br><span class="line"></span><br><span class="line">&#125;BiTNode, *BiTree;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CreatTree</span><span class="params">(BiTree &amp;T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line">cin&gt;&gt;x;</span><br><span class="line"><span class="keyword">if</span>(x == <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">T = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">T = <span class="keyword">new</span> BiTNode;</span><br><span class="line">T -&gt;v =x;</span><br><span class="line"><span class="built_in">CreatTree</span>(T -&gt; lc);</span><br><span class="line"><span class="built_in">CreatTree</span>(T -&gt; rc);</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span>  <span class="title">cnt</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(T == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line"><span class="keyword">if</span>(T -&gt;lc !=<span class="literal">NULL</span> &amp;&amp; T -&gt; rc != <span class="literal">NULL</span>) n = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">cnt</span>(T -&gt; lc) + <span class="built_in">cnt</span>(T -&gt; rc) + n;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">depth</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(T == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> lh =<span class="built_in">depth</span>(T -&gt; lc);</span><br><span class="line"><span class="type">int</span> rh = <span class="built_in">depth</span>(T -&gt;rc);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(lh &gt; rh) <span class="keyword">return</span> lh +<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> rh + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">BiTree T;</span><br><span class="line"><span class="built_in">CreatTree</span>(T);</span><br><span class="line">cout&lt;&lt;<span class="built_in">cnt</span>(T); </span><br><span class="line">cout&lt;&lt;endl&lt;&lt;<span class="built_in">depth</span>(T);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-14"><a href="#3-14" class="headerlink" title="3- 14"></a>3- 14</h3><h3 id="3-15"><a href="#3-15" class="headerlink" title="3-15"></a>3-15</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++) cin&gt;&gt;a[i];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> l = <span class="number">0</span>,  r  = n - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(l  &lt; r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> mid = l + r + <span class="number">1</span> &gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(a[mid] &gt; mid) r = mid <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">else</span> l = mid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(l == a[l]) cout&lt;&lt;l&lt;&lt;endl;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>haue天梯赛选拔赛第二场</title>
      <link href="/2023/03/07/haue%E5%A4%A9%E6%A2%AF%E8%B5%9B%E9%80%89%E6%8B%94%E8%B5%9B%E7%AC%AC%E4%BA%8C%E5%9C%BA/"/>
      <url>/2023/03/07/haue%E5%A4%A9%E6%A2%AF%E8%B5%9B%E9%80%89%E6%8B%94%E8%B5%9B%E7%AC%AC%E4%BA%8C%E5%9C%BA/</url>
      
        <content type="html"><![CDATA[<h3 id="不变初心数"><a href="#不变初心数" class="headerlink" title="不变初心数"></a><strong>不变初心数</strong></h3><p>(<a href="https://pintia.cn/problem-sets/1629123326780203008/exam/problems/1629123515519692804">题目详情 - 7-5 不变初心数 (pintia.cn)</a>)</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ul><li>枚举</li><li>求得每个数乘以2.3.4.5.6.7.8.9 每个位置上数字之和是否相等</li></ul><h4 id="ACCode"><a href="#ACCode" class="headerlink" title="ACCode"></a>ACCode</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">while</span>(n--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line">cin&gt;&gt;x;</span><br><span class="line"><span class="type">int</span> t = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> a = x;</span><br><span class="line"><span class="keyword">while</span>(x)</span><br><span class="line">&#123;</span><br><span class="line">t += x %<span class="number">10</span>;</span><br><span class="line">x = x/<span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> flag = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">9</span>; i ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> tmp = <span class="number">0</span>;</span><br><span class="line">tmp = a *i;</span><br><span class="line"><span class="type">int</span> t1 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(tmp)</span><br><span class="line">&#123;</span><br><span class="line">t1 += tmp%<span class="number">10</span>;</span><br><span class="line">tmp = tmp / <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(t1 == t)&#123;</span><br><span class="line">flag ++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//循环外  </span></span><br><span class="line">        <span class="keyword">if</span>(flag == <span class="number">8</span>) </span><br><span class="line">cout&lt;&lt;t&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">cout&lt;&lt;<span class="string">&quot;NO&quot;</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="盲盒包装流水线"><a href="#盲盒包装流水线" class="headerlink" title="盲盒包装流水线"></a><strong>盲盒包装流水线</strong></h3><p><a href="https://pintia.cn/problem-sets/1629123326780203008/exam/problems/1629123515519692808">题目详情 - 7-6 盲盒包装流水线 (pintia.cn)</a></p><h4 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h4><h4 id="ACcode"><a href="#ACcode" class="headerlink" title="ACcode"></a>ACcode</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MAXN = <span class="number">100010</span>;</span><br><span class="line">map&lt;string, <span class="type">int</span>&gt; mp;</span><br><span class="line">string str[MAXN];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, s;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; s;</span><br><span class="line">    <span class="keyword">for</span> ( <span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++ )</span><br><span class="line">        cin &gt;&gt; str[i];</span><br><span class="line">    <span class="keyword">for</span> ( <span class="type">int</span> i = <span class="number">1</span>; i &lt;= n / s; i ++ )</span><br><span class="line">        <span class="keyword">for</span> ( <span class="type">int</span> j = <span class="number">1</span>; j &lt;= s; j ++ )</span><br><span class="line">            cin &gt;&gt; mp[str[i * s - j]];</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> k;</span><br><span class="line">    cin &gt;&gt; k;</span><br><span class="line">    string num;</span><br><span class="line">    <span class="keyword">while</span> ( k -- ) &#123;</span><br><span class="line">        cin &gt;&gt; num;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ( mp.<span class="built_in">count</span>(num) ) cout &lt;&lt; mp[num] &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;Wrong Number\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="字母串"><a href="#字母串" class="headerlink" title="字母串"></a>字母串</h3><p><a href="https://pintia.cn/problem-sets/1629123326780203008/exam/problems/1629123515519692805">题目详情 - 7-7 字母串 (pintia.cn)</a></p><h4 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h4><h4 id="ACcode-1"><a href="#ACcode-1" class="headerlink" title="ACcode"></a>ACcode</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(n--)</span><br><span class="line">&#123;</span><br><span class="line">string s;</span><br><span class="line">cin&gt;&gt;s;</span><br><span class="line"><span class="type">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>() - <span class="number">1</span>; i ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i] &gt;=<span class="string">&#x27;a&#x27;</span> &amp;&amp;s[i] &lt;=<span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//特里a </span></span><br><span class="line"><span class="keyword">if</span>(s[i] - <span class="number">32</span> !=(<span class="type">int</span>)s[i+<span class="number">1</span>] &amp;&amp; (<span class="type">int</span>)s[i+<span class="number">1</span>] != s[i] - <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;N&quot;</span>&lt;&lt;endl;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i+<span class="number">1</span>] != s[i] + <span class="number">32</span> &amp;&amp; s[i+<span class="number">1</span>] != s[i] + <span class="number">1</span>) </span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;N&quot;</span>&lt;&lt;endl;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> &#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag == <span class="number">0</span>) cout&lt;&lt;<span class="string">&quot;Y&quot;</span>&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="矩阵列平移"><a href="#矩阵列平移" class="headerlink" title="矩阵列平移"></a>矩阵列平移</h3><p><a href="https://pintia.cn/problem-sets/1629123326780203008/exam/problems/1629123515519692806">https://pintia.cn/problem-sets/1629123326780203008/exam/problems/1629123515519692806</a></p><h4 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h4><h4 id="ACCode-1"><a href="#ACCode-1" class="headerlink" title="ACCode"></a>ACCode</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">110</span>;</span><br><span class="line"><span class="type">int</span> a[N][N];</span><br><span class="line"><span class="type">int</span> b[N][N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,k,x;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;k&gt;&gt;x;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) </span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j ++)   </span><br><span class="line">     cin&gt;&gt;a[i][j];     </span><br><span class="line"><span class="type">int</span> cnt = <span class="number">1</span>; </span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">2</span>; j &lt;= n; j = j +<span class="number">2</span> ) <span class="comment">//列 </span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> + cnt;i &lt;= n; i ++)</span><br><span class="line">&#123;</span><br><span class="line">b[i][j] = a[i-cnt][j];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i= <span class="number">1</span>; i &lt; <span class="number">1</span> + cnt; i++)</span><br><span class="line"> b[i][j] = x;</span><br><span class="line"> </span><br><span class="line">cnt ++;</span><br><span class="line"><span class="keyword">if</span>(cnt &gt; k) cnt = <span class="number">1</span>;</span><br><span class="line">&#125;    </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;=n; j = j +<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;=n; i++)</span><br><span class="line">&#123;</span><br><span class="line">b[i][j] = a[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> s = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;=n; j ++)</span><br><span class="line">&#123;</span><br><span class="line">s +=b[i][j];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;s;</span><br><span class="line"><span class="keyword">if</span>(i &lt; n) cout&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"> &#125; </span><br><span class="line"> cout&lt;&lt;endl;</span><br><span class="line">     </span><br><span class="line">    </span><br><span class="line">     </span><br><span class="line">     </span><br><span class="line">     </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="均是素数"><a href="#均是素数" class="headerlink" title="均是素数"></a>均是素数</h3><p><a href="https://pintia.cn/problem-sets/1629123326780203008/exam/problems/1629123515519692807">https://pintia.cn/problem-sets/1629123326780203008/exam/problems/1629123515519692807</a></p><h4 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h4><h4 id="ACCode-2"><a href="#ACCode-2" class="headerlink" title="ACCode"></a>ACCode</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1010</span>;</span><br><span class="line"><span class="type">int</span> flag[N];</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">prime</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x ==<span class="number">1</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>; i &lt;= x / i ; i ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(x % i == <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>  <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> m,n;</span><br><span class="line"><span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">cin&gt;&gt;m&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = m; i &lt;=n; i ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">prime</span>(i) &amp;&amp;!flag[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = i +<span class="number">1</span>; j &lt;=n; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">prime</span>(j) &amp;&amp;!flag[j])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> k = j +<span class="number">1</span>; k &lt;=n; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">prime</span>(k) &amp;&amp;!flag[k])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">prime</span>(i*j+k)&amp;&amp;<span class="built_in">prime</span>(j*k+i)&amp;&amp;<span class="built_in">prime</span>(i*k+j)) res++;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout&lt;&lt;res&lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="吉老师的回归"><a href="#吉老师的回归" class="headerlink" title="吉老师的回归"></a>吉老师的回归</h3><p><a href="https://pintia.cn/problem-sets/1629123326780203008/exam/problems/1629124099119345664">https://pintia.cn/problem-sets/1629123326780203008/exam/problems/1629124099119345664</a></p><h4 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h4><h4 id="ACcode-2"><a href="#ACcode-2" class="headerlink" title="ACcode"></a>ACcode</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,m,cnt=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> flag=<span class="number">1</span>; </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line"><span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">while</span>(n--)</span><br><span class="line">&#123;</span><br><span class="line">string s;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">getline</span>(cin,s);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(s.<span class="built_in">find</span>(<span class="string">&quot;qiandao&quot;</span>)!=<span class="number">-1</span>||s.<span class="built_in">find</span>(<span class="string">&quot;easy&quot;</span>)!=<span class="number">-1</span> )</span><br><span class="line">             <span class="keyword">continue</span>;</span><br><span class="line"> <span class="keyword">else</span> cnt++;                  </span><br><span class="line"> <span class="keyword">if</span>(cnt &gt; m) </span><br><span class="line"> &#123;</span><br><span class="line"> cout&lt;&lt;s; </span><br><span class="line"> flag = <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">if</span>(flag) cout&lt;&lt;<span class="string">&quot;Wo AK le&quot;</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="天梯赛的善良"><a href="#天梯赛的善良" class="headerlink" title="天梯赛的善良"></a>天梯赛的善良</h3><p><a href="https://pintia.cn/problem-sets/1629123326780203008/exam/problems/1629124099119345665">https://pintia.cn/problem-sets/1629123326780203008/exam/problems/1629124099119345665</a></p><h4 id="思路-6"><a href="#思路-6" class="headerlink" title="思路"></a>思路</h4><h4 id="ACcode-3"><a href="#ACcode-3" class="headerlink" title="ACcode"></a>ACcode</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="type">int</span> max0 = <span class="number">-1</span>, min0 = N;</span><br><span class="line"><span class="keyword">while</span>(n--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line">cin&gt;&gt;x;</span><br><span class="line">a[x]++;</span><br><span class="line">max0 = <span class="built_in">max</span>(max0,x);</span><br><span class="line">min0 = <span class="built_in">min</span>(min0,x);</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;min0&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;a[min0]&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;max0&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;a[max0];</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="哲哲打游戏"><a href="#哲哲打游戏" class="headerlink" title="哲哲打游戏"></a>哲哲打游戏</h3><p><a href="https://pintia.cn/problem-sets/1629123326780203008/exam/problems/1629123515519692811">https://pintia.cn/problem-sets/1629123326780203008/exam/problems/1629123515519692811</a></p><h4 id="思路-7"><a href="#思路-7" class="headerlink" title="思路"></a>思路</h4><h4 id="ACCode-3"><a href="#ACCode-3" class="headerlink" title="ACCode"></a>ACCode</h4><h3 id="乘法口诀数列"><a href="#乘法口诀数列" class="headerlink" title="乘法口诀数列"></a>乘法口诀数列</h3><p><a href="https://pintia.cn/problem-sets/1629123326780203008/exam/problems/1629124099119345666">https://pintia.cn/problem-sets/1629123326780203008/exam/problems/1629124099119345666</a></p><h4 id="思路-8"><a href="#思路-8" class="headerlink" title="思路"></a>思路</h4><h4 id="ACcode-4"><a href="#ACcode-4" class="headerlink" title="ACcode"></a>ACcode</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1010</span>;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin&gt;&gt;a[<span class="number">1</span>]&gt;&gt;a[<span class="number">2</span>];</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">3</span>,k = <span class="number">3</span>; i &lt;= n; i ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> t = a[i<span class="number">-2</span>] *a[i<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">if</span>(t &lt; <span class="number">10</span>) a[k++] = t;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">a[k++] =  t / <span class="number">10</span>;</span><br><span class="line">a[k++] = t % <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i ++)</span><br><span class="line">cout&lt;&lt;a[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">cout&lt;&lt;a[n];</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="最长山脉"><a href="#最长山脉" class="headerlink" title="最长山脉"></a>最长山脉</h3><p><a href="https://pintia.cn/problem-sets/1629123326780203008/exam/problems/1629128088028270592">https://pintia.cn/problem-sets/1629123326780203008/exam/problems/1629128088028270592</a></p><h4 id="思路-9"><a href="#思路-9" class="headerlink" title="思路"></a>思路</h4><h4 id="ACCode-4"><a href="#ACCode-4" class="headerlink" title="ACCode"></a>ACCode</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> a[N],b[N],c[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) cin&gt;&gt;a[i];</span><br><span class="line"></span><br><span class="line"><span class="comment">//以第i个为结尾递增的元素个数 （不包括自己）；</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i] &gt; a[i<span class="number">-1</span>]) b[i] = b[i<span class="number">-1</span>] + <span class="number">1</span>;</span><br><span class="line"> &#125; </span><br><span class="line"> </span><br><span class="line"><span class="comment">//以第i个为起点递减的元素个数（不包括自己） </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = n - <span class="number">1</span>; i &gt;= <span class="number">1</span>; i --)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i] &gt; a[i+<span class="number">1</span>]) c[i] = c[i+<span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line"> &#125; </span><br><span class="line"><span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;=n; i ++)</span><br><span class="line">&#123;</span><br><span class="line">res = <span class="built_in">max</span>(res,b[i] + c[i] + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(res &lt; <span class="number">3</span>) cout&lt;&lt;<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> cout&lt;&lt;res;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> “pta” </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Liunx学习笔记</title>
      <link href="/2023/02/15/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2023/02/15/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="一-获得Linux系统"><a href="#一-获得Linux系统" class="headerlink" title="一 获得Linux系统"></a>一 获得Linux系统</h3><h4 id="1-WLS概述"><a href="#1-WLS概述" class="headerlink" title="1 WLS概述"></a>1 WLS概述</h4><ul><li>Windows Subsystem for Linux（简称WSL）是一个在Windows 10\11上能够运行原生Linux二进制可执行文件（ELF格式）的兼容层。它是由微软与Canonical公司合作开发，其目标是使纯正的Ubuntu、Debian等映像能下载和解压到用户的本地计算机，并且映像内的工具和实用工具能在此子系统上原生运行.</li><li>作用就是在windows系统中获得Linux系统,无需通过虚拟机使用</li></ul><h4 id="2-如何搭建WLS"><a href="#2-如何搭建WLS" class="headerlink" title="2.如何搭建WLS"></a>2.如何搭建WLS</h4><ul><li>WSL是win10自带的功能,无需下载,打开即可</li><li>第一步 打开设置<br>右键开始菜单<br><img src="https://img-blog.csdnimg.cn/56df4f5f6874482d8768752fc7b49b68.png"><br><img src="https://img-blog.csdnimg.cn/e437b307f4ad4ea9a0397682fa038017.png"><br><img src="https://img-blog.csdnimg.cn/3c80c90ec1db4f29afa6dc979ad5cb6e.png"><br><img src="https://img-blog.csdnimg.cn/b5bc94eb41e341b9a23ac66e19ee9625.png"></li><li>第二步重新启动电脑</li><li>第三步在微软商店下载ubantu系统<br><img src="https://img-blog.csdnimg.cn/c71cc83c6ad5493897fc77c555b85bac.png"></li><li>第四步打开ubantu 设置用户密码即可<br><img src="https://img-blog.csdnimg.cn/d168b825c2de48bc8df726a1bb16c937.png"></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>C++语法（更新中）</title>
      <link href="/2023/01/09/C-%E8%AF%AD%E6%B3%95/"/>
      <url>/2023/01/09/C-%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><ul><li>本篇文章只介绍C++比C语言多出来的用法，目的是快速上手C++.</li><li>主要介绍string 和STL</li></ul><h2 id="初识C"><a href="#初识C" class="headerlink" title="初识C++"></a>初识C++</h2><h3 id="第一个C-程序"><a href="#第一个C-程序" class="headerlink" title="第一个C++程序"></a>第一个C++程序</h3><p><strong>C++代码</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> </span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Hello,world!&quot;</span> ;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>C代码</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Hello,world!&quot;</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>头文件</strong></p><ul><li>和C++ 必须添加#include <iostream> 头文件才能让C++程序正常运行,和C 语言必须添加的 #include &lt;stdio.h&gt;意义一样</li></ul><p>**using namespace std; **</p><ul><li>std 是 C++ 标准库所使用的命名空间。</li><li>这句含话的含义就是声明一下使用C++标准库的命名空间,也可以不声明,但是写法不一样</li><li>例如cout 如果提前声明了代码正如第一个C++代码,不声明就是下面的代码,需要std:: 去调用</li></ul><p><strong>不使用using namespace std; Code</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> </span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;Hello,world!&quot;</span> ;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="输入输出"><a href="#输入输出" class="headerlink" title="输入输出"></a>输入输出</h3><p><strong>用法</strong></p><ul><li>输入cin&gt;&gt;变量名字</li><li>输出 cout&lt;&lt;变量名字</li></ul><p><strong>C++代码</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a;  <span class="comment">//定义一个变量a</span></span><br><span class="line"> </span><br><span class="line">    cin &gt;&gt; a;  <span class="comment">//输入a的值</span></span><br><span class="line">    </span><br><span class="line">    cout &lt;&lt; a;  <span class="comment">//输出a的值</span></span><br><span class="line">    cout&lt;&lt;endl;<span class="comment">//换行，相当于printf(“\n&quot;);</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// scanf(&quot;%d&quot;,&amp;a);</span></span><br><span class="line">    <span class="comment">// printf(&quot;%d&quot;,&amp;a);</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意</strong></p><ul><li>在c++程序中 仍然可以使用scanf()和printf(), <iostream> 库中包含这俩个函数</li><li>相较于scanf()和printf(); <strong>cin&gt;&gt;</strong> 和<strong>cout&lt;&lt;</strong> 不需要考虑变量的类型可以直接输入输出,更加方便</li><li>但是**cin&gt;&gt;<strong>比</strong>scanf()**读入的效率慢(初学者先不用考虑)</li><li>当输入很多的数的时候建议使用scanf()读入</li><li>当输出要保留小数和要求格式的时候建议使用printf();</li></ul><h2 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h2><p><strong>作用</strong></p><ul><li>储存字符串类型的数据</li></ul><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><ul><li>声明  string + 变量名字  如string s;</li><li>赋值   s &#x3D; “ls”</li><li>输入  cin&gt;&gt;s;</li><li>输出  cout&lt;&lt;s;</li><li>运算  俩个字符串可以直接相加 s1 &#x3D; “haue”,s2 &#x3D;”ls”，那么s1+s2  &#x3D; “hauels”;</li><li>比较 支持 &gt;, &lt;, &gt;&#x3D;, &lt;&#x3D;, &#x3D;&#x3D;, !&#x3D;等所有比较操作，按字典序进行比较。 <a href="https://baike.baidu.com/item/%E5%AD%97%E5%85%B8%E5%BA%8F/7786229">什么是字典序</a></li><li>字符串的长度  s.size()</li><li>遍历 把字符串堪称字符数组进行遍历for()</li></ul><h4 id="演示代码"><a href="#演示代码" class="headerlink" title="演示代码"></a>演示代码</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 声明</span></span><br><span class="line">    string s1;<span class="comment">//默认初始化，s1,s2是一个空字符串声明</span></span><br><span class="line">    string s2;</span><br><span class="line">    string s3 = <span class="string">&quot;haue&quot;</span>; </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//赋值</span></span><br><span class="line">    s1 = <span class="string">&quot;ls&quot;</span>; </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//输入</span></span><br><span class="line">    cin&gt;&gt;s2;</span><br><span class="line">    <span class="comment">//输出</span></span><br><span class="line">    cout&lt;&lt;s3&lt;&lt;endl&lt;&lt;s1&lt;&lt;endl; </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//运算</span></span><br><span class="line">    s3 = s3 + s1;<span class="comment">//结果 s3 = &quot;hauels&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//遍历</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; s3.<span class="built_in">size</span>(); i ++) <span class="comment">//s3.size() 是计算字符串的大小</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;s3[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="反转，截取-字符串"><a href="#反转，截取-字符串" class="headerlink" title="反转，截取 字符串"></a>反转，截取 字符串</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 声明</span></span><br><span class="line">    string s1 = <span class="string">&quot;haue_ls&quot;</span>; </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//截取字符串</span></span><br><span class="line">    string t = s1.<span class="built_in">substr</span>(<span class="number">0</span>,<span class="number">4</span>); <span class="comment">//截取下标为0的位置开始（包含这个位置）向后4位</span></span><br><span class="line">    cout&lt;&lt;t&lt;&lt;endl; <span class="comment">//haue;</span></span><br><span class="line">    </span><br><span class="line">    t = s1.<span class="built_in">substr</span>(<span class="number">5</span>,<span class="number">2</span>); <span class="comment">// 截取从下标5为位置开始（包含这个位置）向后2位；</span></span><br><span class="line">    cout&lt;&lt;t&lt;&lt;endl; <span class="comment">//ls</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//反转字符串</span></span><br><span class="line">    <span class="built_in">reverse</span>(s1.<span class="built_in">begin</span>(),s1.<span class="built_in">end</span>());<span class="comment">//将字符串s1反转</span></span><br><span class="line">    cout&lt;&lt;s1&lt;&lt;endl;<span class="comment">//sl_euah</span></span><br><span class="line">  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><ul><li>赋值时 要用双引号<strong>“ ”</strong>，单引号时字符类型，双引号是字符串类型。</li><li>可以把字符串类型看成字符类型数组 下标是0~s.size() -1。 </li><li>读入含有空格的字符串的时候 要用getline(cin,s);读入。</li><li><a href="https://oi-wiki.org/lang/csl/string/">更多用法</a></li></ul><h4 id="练习题目"><a href="#练习题目" class="headerlink" title="练习题目"></a>练习题目</h4><ul><li><a href="https://www.acwing.com/problem/content/762/">760. 字符串长度 - AcWing题库</a></li><li><a href="https://www.acwing.com/problem/content/763/">761. 字符串中的数字个数 - AcWing题库</a></li><li><a href="https://www.acwing.com/activity/content/problem/content/1954/">AcWing 769. 替换字符 - AcWing</a></li><li><a href="https://www.acwing.com/problem/content/764/">762. 字符串匹配 - AcWing题库</a></li><li><a href="https://www.acwing.com/problem/content/769/">767. 信息加密 - AcWing题库</a></li></ul><h2 id="STL容器"><a href="#STL容器" class="headerlink" title="STL容器"></a>STL容器</h2><h3 id="1-vector"><a href="#1-vector" class="headerlink" title="1.vector"></a>1.vector</h3><h4 id="1-1概述"><a href="#1-1概述" class="headerlink" title="1.1概述"></a>1.1概述</h4><ul><li>在C++中，vector是一个十分有用的容器，是一个能够存放任意类型的动态数组，可以动态改变大小，支持随机访问，不支持在任意位置 O(1)插入。 为了保证效率，元素的增删一般应该在末尾进行。</li><li>可以用来代替c++原本的数组。</li><li>vector是标准库中常见的一种容器，使用时引用<strong>vector</strong>库</li><li>与数组相比，容器在自动处理容量的大小时会消耗更多的内存，但能很好的调整存储空间大小。</li></ul><h4 id="1-2声明"><a href="#1-2声明" class="headerlink" title="1.2声明"></a>1.2声明</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span>  <span class="comment">//引用&lt;vector&gt;库</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; a; <span class="comment">//相当于一个长度动态变化的int数组</span></span><br><span class="line">    </span><br><span class="line">    vector&lt;<span class="type">char</span>&gt; b; <span class="comment">//相当于一个长度动态变化的char数组</span></span><br><span class="line">    </span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; c[<span class="number">200</span>]; <span class="comment">//相当于一维长200，二维长度动态变化的int 数组</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">res</span>&#123;</span><br><span class="line">        <span class="type">int</span> a,b;</span><br><span class="line">    &#125;;</span><br><span class="line">    vector&lt;res&gt; d;  <span class="comment">//自定义的结构体也可保存vector中</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="1-3插入和删除"><a href="#1-3插入和删除" class="headerlink" title="1.3插入和删除"></a>1.3插入和删除</h4><ul><li><p>a.push_back(x)把元素x插入到vector a的尾部。</p></li><li><p>b.pop_back()删除vector b的最后一个元素。</p></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span>  <span class="comment">//引用&lt;vector&gt;库</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; a; <span class="comment">//相当于一个长度动态变化的int数组</span></span><br><span class="line">    </span><br><span class="line">    a.<span class="built_in">push_back</span>(<span class="number">1</span>); <span class="comment">//把元素1插入到vector a的尾部。</span></span><br><span class="line">    a.<span class="built_in">pop_back</span>();   <span class="comment">//删除vector a的最后一个元素。</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-4大小、判空、清空"><a href="#1-4大小、判空、清空" class="headerlink" title="1.4大小、判空、清空"></a>1.4大小、判空、清空</h4><ul><li>size函数返回vector的实际长度（包含的元素个数)</li><li>empty函数返回一个bool类型，表明vector是否为空。也可以不用这个函数直接用size计算长度，长度为0就是空的</li><li>二者的时间复杂度都是 O(1)。</li><li>所有的STL容器都支持这两个方法，含义也相同，之后我们就不再重复给出。</li><li>clear函数把vector清空。</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span>  <span class="comment">//引用&lt;vector&gt;库</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; a; <span class="comment">//相当于一个长度动态变化的int数组</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i ++) a.<span class="built_in">push_back</span>(i);</span><br><span class="line">    </span><br><span class="line">    cout&lt;&lt;a.<span class="built_in">size</span>()&lt;&lt;endl;  <span class="comment">//a的长度为10；</span></span><br><span class="line">    </span><br><span class="line">    cout&lt;&lt;a.<span class="built_in">empty</span>()&lt;&lt;endl; <span class="comment">//a不为空所以a.empty()为false 对应的数值是0</span></span><br><span class="line">    </span><br><span class="line">    a.<span class="built_in">clear</span>();  <span class="comment">//清空a</span></span><br><span class="line">    cout&lt;&lt;a.<span class="built_in">size</span>()&lt;&lt;endl; <span class="comment">//a的长度为0</span></span><br><span class="line">    </span><br><span class="line">    vector&lt;<span class="type">int</span> &gt; b;</span><br><span class="line">    cout&lt;&lt;b.<span class="built_in">size</span>();  <span class="comment">//b的长度为0</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-5访问"><a href="#1-5访问" class="headerlink" title="1.5访问"></a>1.5访问</h4><ul><li>把vector 当成数组访问即可<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span>  <span class="comment">//引用&lt;vector&gt;库</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; a; <span class="comment">//相当于一个长度动态变化的int数组</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i ++) a.<span class="built_in">push_back</span>(i);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; a.<span class="built_in">size</span>(); i ++) cout&lt;&lt;a[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-set"><a href="#2-set" class="headerlink" title="2.set"></a>2.set</h3><h4 id="2-1概述"><a href="#2-1概述" class="headerlink" title="2.1概述"></a>2.1概述</h4><ul><li>set意为集合，是一个<strong>内部自动有序</strong>，并且<strong>不含重复元素</strong>的容器，有些题目可能会要求去重操作，这时候就可以用set去解决，并且set可以实现自动排序，熟练的使用set之后可以减少某些题目的思维量，如果要使用set，需要添加<a href="https://so.csdn.net/so/search?q=%E5%A4%B4%E6%96%87%E4%BB%B6&spm=1001.2101.3001.7020">头文件</a><code>#include &lt;set&gt;</code></li></ul><h4 id="2-2声明"><a href="#2-2声明" class="headerlink" title="2.2声明"></a>2.2声明</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;set&gt;</span> <span class="comment">//引用set库</span></span></span><br><span class="line">set&lt;<span class="type">int</span>&gt; s; <span class="comment">//声明一个存储int类型的集合</span></span><br></pre></td></tr></table></figure><h4 id="2-3插入"><a href="#2-3插入" class="headerlink" title="2.3插入"></a>2.3插入</h4><ul><li><p>s.insert(x)把一个元素x插入到集合s中，时间复杂度为 O(logn)。</p></li><li><p>在set中，若元素已存在，则不会重复插入该元素，对集合的状态无影响。</p></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;set&gt;</span> <span class="comment">//引用set库</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    set&lt;<span class="type">int</span>&gt; s; <span class="comment">//声明一个存储int类型的集合</span></span><br><span class="line">    </span><br><span class="line">    s.<span class="built_in">insert</span>(<span class="number">1</span>); <span class="comment">//插入数字1</span></span><br><span class="line">    </span><br><span class="line">    cout&lt;&lt;s.<span class="built_in">size</span>()&lt;&lt;endl;<span class="comment">//输出集合的大小 为1</span></span><br><span class="line">    </span><br><span class="line">    s.<span class="built_in">insert</span>(<span class="number">1</span>);  <span class="comment">//插入数字1，发现集合中已经存在数字1，就不进入集合</span></span><br><span class="line">    </span><br><span class="line">    cout&lt;&lt;s.<span class="built_in">size</span>()&lt;&lt;endl; <span class="comment">//集合大小还是1</span></span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-4访问"><a href="#2-4访问" class="headerlink" title="2.4访问"></a>2.4访问</h4><ul><li><p><code>set</code> 只能通过迭代器进行访问</p></li><li><p>迭代器就像<code>STL</code>容器的“指针”，可以用星号<code>*</code>操作符解除引用。</p></li><li><p><code>set</code>的迭代器称为“双向访问迭代器”，不支持“随机访问”，支持星号<code>*</code>解除引用，仅支持<code>++</code>和<code>--</code>两个与算术相关的操作。</p></li><li><p>一个保存<code>int</code>类型的<code>set</code>的迭代器声明方法为：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set&lt;<span class="type">int</span>&gt; :: iterator it;</span><br></pre></td></tr></table></figure></li><li><p>接下来亦引入 <code>begin/end</code> 这俩个特殊的迭代器，分别返回集合的首、尾迭代器，时间复杂度均为 O(1)。需要注意的是stl容器的迭代器都是前开后闭得（s.begin()是指向集合中最小元素的迭代器。s.end()是指向集合中最大元素的<strong>下一个位置的迭代器</strong>。）</p></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;set&gt;</span> <span class="comment">//引用set库</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    set&lt;<span class="type">int</span>&gt; s; <span class="comment">//声明一个存储int类型的集合</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">10</span>; i &gt;=<span class="number">1</span>; i --) s.<span class="built_in">insert</span>(i);  <span class="comment">//插入后自动排序（从小到大自动排序好）</span></span><br><span class="line">    </span><br><span class="line">    cout&lt;&lt;*s.<span class="built_in">begin</span>()&lt;&lt;endl;   <span class="comment">//s.begin()是指向集合最小的元素的迭代器， *解除引用</span></span><br><span class="line">    </span><br><span class="line">    cout&lt;&lt;*--s.<span class="built_in">end</span>()&lt;&lt;endl;   <span class="comment">//s.end()是指向集合最大元素的下一个位置的迭代器，所以指向最大元素的迭代器是 --s.end(), * 解除引用</span></span><br><span class="line">    </span><br><span class="line">     <span class="comment">//从前向后遍历</span></span><br><span class="line">    <span class="keyword">for</span>(set&lt;<span class="type">int</span>&gt;:: iterator it = s.<span class="built_in">begin</span>(); it != s.<span class="built_in">end</span>(); it ++) cout&lt;&lt;*it&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    cout&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//从后向前遍历</span></span><br><span class="line">    <span class="keyword">for</span>(set&lt;<span class="type">int</span>&gt;:: iterator it = --s.<span class="built_in">end</span>();it != --s.<span class="built_in">begin</span>(); it --) cout&lt;&lt;*it&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-5查找"><a href="#2-5查找" class="headerlink" title="2.5查找"></a>2.5查找</h4><ul><li><p>s.find(x)在集合s中查找等于x的元素，并返回指向该元素的迭代器。若不存在，则返回s.end()。时间复杂度为 O(logn)。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;set&gt;</span> <span class="comment">//引用set库</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    set&lt;<span class="type">int</span>&gt; s; <span class="comment">//声明一个存储int类型的集合</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">10</span>; i &gt;=<span class="number">1</span>; i --) s.<span class="built_in">insert</span>(i);  <span class="comment">//插入后自动排序（从小到大自动排序好）</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(s.<span class="built_in">find</span>(<span class="number">15</span>) !=  s.<span class="built_in">end</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;这个数在集合s中&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;这个数不在集合s中&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">if</span>(s.<span class="built_in">find</span>(<span class="number">5</span>) !=  s.<span class="built_in">end</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;这个数在集合s中&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;这个数不在集合s中&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><code>s.count(x)</code>返回集合<code>s</code>中等于<code>x</code>的元素个数，时间复杂度为 O(k+logn)，其中 <code>k</code> 为元素<code>x</code>的个数。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;set&gt;</span> <span class="comment">//引用set库</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    set&lt;<span class="type">int</span>&gt; s; <span class="comment">//声明一个存储int类型的集合</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">10</span>; i &gt;=<span class="number">1</span>; i --) s.<span class="built_in">insert</span>(i);  <span class="comment">//插入后自动排序（从小到大自动排序好）</span></span><br><span class="line">    </span><br><span class="line">    cout&lt;&lt;s.<span class="built_in">count</span>(<span class="number">1</span>)&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">    cout&lt;&lt;s.<span class="built_in">count</span>(<span class="number">15</span>)&lt;&lt;endl;</span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><strong>注意</strong></p><ul><li><code>s.find(x)</code> 返回的是迭代器，<code>s.count(x)</code>是返回的集合<code>s</code>中含有<code>x</code>的数量</li></ul><h4 id="2-6删除"><a href="#2-6删除" class="headerlink" title="2.6删除"></a>2.6删除</h4><ul><li>设<code>it</code>是一个迭代器，<code>s.erase(it)</code>从s中删除迭代器<code>it</code>指向的元素，时间复杂度为 <code>O(logn)</code>。</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;set&gt;</span> <span class="comment">//引用set库</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    set&lt;<span class="type">int</span>&gt; s; <span class="comment">//声明一个存储int类型的集合</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">10</span>; i &gt;=<span class="number">1</span>; i --) s.<span class="built_in">insert</span>(i);  <span class="comment">//插入后自动排序（从小到大自动排序好）</span></span><br><span class="line">    </span><br><span class="line">    s.<span class="built_in">erase</span>(s.<span class="built_in">begin</span>());  <span class="comment">//删除迭代器s.begin() 指向的元素也就是最小的元素 1</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(set&lt;<span class="type">int</span>&gt; :: iterator it = s.<span class="built_in">begin</span>(); it != s.<span class="built_in">end</span>(); it++) cout&lt;&lt;*it&lt;&lt;<span class="string">&#x27; &#x27;</span>;<span class="comment">//遍历一边</span></span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-7练习题目"><a href="#2-7练习题目" class="headerlink" title="2.7练习题目"></a>2.7练习题目</h4><ul><li><a href="https://www.acwing.com/problem/content/description/4722/">4719. 商品种类 - AcWing题库</a></li></ul><h3 id="3-pair"><a href="#3-pair" class="headerlink" title="3.pair"></a>3.pair</h3><h4 id="3-1概述"><a href="#3-1概述" class="headerlink" title="3.1概述"></a>3.1概述</h4><ul><li><code>pair</code>是c++标准库的一个模板，将俩个变量关联在一起，组成一个对，俩个变量的类型可以不同</li><li><code>pair</code>的实现是一个结构体，主要的两个成员变量是first second </li><li>排序默认是比较第一个元素,若第一个元素相等在比较第二个元素</li></ul><h4 id="3-2声明"><a href="#3-2声明" class="headerlink" title="3.2声明"></a>3.2声明</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    pair&lt;<span class="type">int</span> ,<span class="type">int</span>&gt; a;</span><br><span class="line">    pair&lt;<span class="type">int</span> ,<span class="type">double</span>&gt;b;</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-3赋值和访问"><a href="#3-3赋值和访问" class="headerlink" title="3.3赋值和访问"></a>3.3赋值和访问</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    pair&lt;<span class="type">int</span> ,<span class="type">int</span>&gt; a;</span><br><span class="line">    pair&lt;<span class="type">int</span> ,<span class="type">double</span>&gt;b;</span><br><span class="line">    a.first= <span class="number">1</span>,a.second = <span class="number">2</span>;</span><br><span class="line">    cout&lt;&lt;a.first&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;a.second&lt;&lt;endl;</span><br><span class="line">    b=&#123;<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line">    cout&lt;&lt;b.first&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;b.second&lt;&lt;endl;</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-4比较"><a href="#3-4比较" class="headerlink" title="3.4比较"></a>3.4比较</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    pair&lt;<span class="type">int</span> ,string &gt; name[<span class="number">10</span>];</span><br><span class="line">    name[<span class="number">0</span>] = &#123;<span class="number">1</span>,<span class="string">&quot;ls&quot;</span>&#125;;</span><br><span class="line">    name[<span class="number">1</span>] = &#123;<span class="number">5</span>,<span class="string">&quot;yk&quot;</span>&#125;;</span><br><span class="line">    name[<span class="number">2</span>] = &#123;<span class="number">4</span>,<span class="string">&quot;jyb&quot;</span>&#125;;</span><br><span class="line">    name[<span class="number">3</span>] = &#123;<span class="number">5</span>,<span class="string">&quot;hty&quot;</span>&#125;;</span><br><span class="line">    <span class="built_in">sort</span>(name,name +<span class="number">4</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;name[i].first&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;name[i].second&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-map"><a href="#4-map" class="headerlink" title="4.map"></a>4.map</h3><h4 id="4-1概述"><a href="#4-1概述" class="headerlink" title="4.1概述"></a>4.1概述</h4><ul><li><code>map</code>是映射类模板，映射是实现关键字与值关系的存储结构，可以使用一个关键字key来访问相应的数据值value。</li><li><code>map</code> 中的关键字key和value 是一个pair 类结构。</li></ul><h4 id="4-2声明"><a href="#4-2声明" class="headerlink" title="4.2声明"></a>4.2声明</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    <span class="comment">// map&lt;key_type, value_type&gt; name;</span></span><br><span class="line">    map&lt;<span class="type">int</span> , string&gt; students; </span><br><span class="line">    map&lt;string, <span class="type">double</span>&gt; commoditys;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-3赋值和访问"><a href="#4-3赋值和访问" class="headerlink" title="4.3赋值和访问"></a>4.3赋值和访问</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    <span class="comment">// map&lt;key_type, value_type&gt; name;</span></span><br><span class="line">    map&lt;<span class="type">int</span> , string &gt; students; </span><br><span class="line">    </span><br><span class="line">    students[<span class="number">217</span>] = <span class="string">&quot;ls&quot;</span>; <span class="comment">//第一种赋值方式</span></span><br><span class="line">    cout&lt;&lt;students[<span class="number">217</span>]&lt;&lt;endl; <span class="comment">//访问</span></span><br><span class="line">    students.<span class="built_in">insert</span>(&#123;<span class="number">218</span>,<span class="string">&quot;pxk&quot;</span>&#125;); <span class="comment">//第二种赋值方式赋值</span></span><br><span class="line">    cout&lt;&lt;students[<span class="number">218</span>]&lt;&lt;endl;</span><br><span class="line">    map&lt;string, <span class="type">double</span>&gt; commoditys;</span><br><span class="line">    commoditys[<span class="string">&quot;yufen&quot;</span>] = <span class="number">12</span>;</span><br><span class="line">    cout&lt;&lt;commoditys[<span class="string">&quot;yufen&quot;</span>]&lt;&lt;endl;</span><br><span class="line">    commoditys.<span class="built_in">insert</span>(&#123;<span class="string">&quot;maocai&quot;</span>,<span class="number">15</span>&#125;);</span><br><span class="line">    cout&lt;&lt;commoditys[<span class="string">&quot;maocai&quot;</span>]&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-4大小和查找"><a href="#4-4大小和查找" class="headerlink" title="4.4大小和查找"></a>4.4大小和查找</h4><ul><li>计算map容器的大小map.size()</li><li>在map容器中查找值为k的元素 map.find(k)，若能找到返回值是该元素的迭代器，否则返回一个&#96;指向map末尾的迭代器，即map.end();<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    <span class="comment">// map&lt;key_type, value_type&gt; name;</span></span><br><span class="line">    map&lt;<span class="type">int</span> , string &gt; students; </span><br><span class="line">    cout&lt;&lt;students.<span class="built_in">size</span>()&lt;&lt;endl; <span class="comment">//计算map的大小</span></span><br><span class="line">    students[<span class="number">217</span>] = <span class="string">&quot;ls&quot;</span>; <span class="comment">//第一种赋值方式</span></span><br><span class="line">    cout&lt;&lt;students[<span class="number">217</span>]&lt;&lt;endl; <span class="comment">//访问</span></span><br><span class="line">    students.<span class="built_in">insert</span>(&#123;<span class="number">218</span>,<span class="string">&quot;pxk&quot;</span>&#125;); <span class="comment">//第二种赋值方式赋值</span></span><br><span class="line">    cout&lt;&lt;students[<span class="number">218</span>]&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;students.<span class="built_in">size</span>()&lt;&lt;endl;    <span class="comment">//计算map 的大小</span></span><br><span class="line">    map&lt;<span class="type">int</span>, string&gt;::iterator it = students.<span class="built_in">find</span>(<span class="number">217</span>);</span><br><span class="line">    <span class="keyword">if</span>(it == students.<span class="built_in">end</span>())  cout&lt;&lt;<span class="string">&quot;找不到元素&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="comment">// else cout &lt;&lt; &quot;迭代器指向 &quot; &lt;&lt; it-&gt;first &lt;&lt; &quot; = &quot; &lt;&lt; it-&gt;second &lt;&lt; endl;</span></span><br><span class="line">    <span class="keyword">else</span> cout&lt;&lt; <span class="string">&quot;迭代器指向&quot;</span> &lt;&lt; it -&gt;first&lt;&lt;<span class="string">&quot;=&quot;</span> &lt;&lt;it -&gt; second &lt;&lt;endl;</span><br><span class="line">    it = students.<span class="built_in">find</span>(<span class="number">220</span>);</span><br><span class="line">    <span class="keyword">if</span>(it == students.<span class="built_in">end</span>()) cout&lt;&lt;<span class="string">&quot;找不到元素&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">else</span> cout&lt;&lt; <span class="string">&quot;迭代器指向&quot;</span>&lt;&lt; it -&gt; first &lt;&lt;<span class="string">&quot; =&quot;</span> &lt;&lt;it -&gt; second&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="4-5遍历"><a href="#4-5遍历" class="headerlink" title="4.5遍历"></a>4.5遍历</h4><ul><li>利用map.begin()和map.end()迭代器进行遍历<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    <span class="comment">// map&lt;key_type, value_type&gt; name;</span></span><br><span class="line">    map&lt;<span class="type">int</span> , string &gt; students; </span><br><span class="line">    students[<span class="number">217</span>] = <span class="string">&quot;ls&quot;</span>; <span class="comment">//第一种赋值方式</span></span><br><span class="line">    students.<span class="built_in">insert</span>(&#123;<span class="number">218</span>,<span class="string">&quot;pxk&quot;</span>&#125;); <span class="comment">//第二种赋值方式赋值</span></span><br><span class="line">    <span class="keyword">for</span>(map&lt;<span class="type">int</span>,string&gt; :: iterator it = students.<span class="built_in">begin</span>(); it != students.<span class="built_in">end</span>(); it ++)</span><br><span class="line">    cout&lt;&lt;it -&gt; first&lt;&lt;<span class="string">&quot; = &quot;</span>&lt;&lt; it -&gt; second&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> C++语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Acwing第85场周赛题解</title>
      <link href="/2023/01/07/Acwing%E7%AC%AC85%E5%9C%BA%E5%91%A8%E8%B5%9B%E9%A2%98%E8%A7%A3/"/>
      <url>/2023/01/07/Acwing%E7%AC%AC85%E5%9C%BA%E5%91%A8%E8%B5%9B%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="Acwing-第85场周赛"><a href="#Acwing-第85场周赛" class="headerlink" title="Acwing 第85场周赛"></a>Acwing 第85场周赛</h1><h2 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a><a href="https://www.acwing.com/activity/content/register/2755/">原题链接</a></h2><h2 id="A-生或死"><a href="#A-生或死" class="headerlink" title="A 生或死"></a>A 生或死</h2><p><strong>描述</strong><br>某国正在以投票的方式决定 2 名死刑犯（编号 1∼2）的生死。</p><p>共有 n 组人员（编号 1∼n）参与投票，每组 10 人。</p><p>每组成员只参与一名死刑犯的投票，其中第 i 组人员的投票对象是死刑犯 ti，其中 xi 人认为他无罪，yi 人认为他有罪。</p><p>在所有人员投票结束后，将对投票结果进行统计。</p><p>对于每名死刑犯，如果投他无罪的总票数大于或等于投他有罪的总票数，则他得以生还，否则他将被处死。</p><p>请你判断每名死刑犯的生死。<br><strong>输入格式</strong><br>第一行包含一个整数 n。</p><p>接下来 n 行，每行包含三个整数 ti,xi,yi。</p><p>保证两名犯人都会被投票。<br><strong>输出格式</strong><br>如果第一位死刑犯生还，则在第一行输出 LIVE，否则在第一行输出 DEAD。</p><p>如果第二位死刑犯生还，则在第二行输出 LIVE，否则在第二行输出 DEAD。<br><strong>输入样例</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">1 5 5</span><br><span class="line">2 6 4</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LIVE</span><br><span class="line">LIVE</span><br></pre></td></tr></table></figure><p><strong>输入样例2</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">1 0 10</span><br><span class="line">2 0 10</span><br><span class="line">1 10 0</span><br></pre></td></tr></table></figure><p><strong>输出样例2</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LIVE</span><br><span class="line">DEAD</span><br></pre></td></tr></table></figure><p><strong>思路</strong></p><ul><li>对读入的数据进行判断 是审判1还是2，记录一下生的人多还是死的人多</li></ul><p><strong>ACcode</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="type">int</span> res1 = <span class="number">0</span>,res2 = <span class="number">0</span>;<span class="comment">//res1 是记录犯人1 res2是记录犯人2 ；判定生的人数是否多余死的人数</span></span><br><span class="line">    <span class="keyword">while</span>(n--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> t,a,b;</span><br><span class="line">        cin&gt;&gt;t&gt;&gt;a&gt;&gt;b;</span><br><span class="line">        <span class="keyword">if</span>(t == <span class="number">1</span>) res1 += +a - b;</span><br><span class="line">        <span class="keyword">else</span> res2 += a - b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(res1 &gt;=<span class="number">0</span>) cout&lt;&lt;<span class="string">&quot;LIVE&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">else</span> cout&lt;&lt;<span class="string">&quot;DEAD&quot;</span>&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(res2 &gt;= <span class="number">0</span>) cout&lt;&lt;<span class="string">&quot;LIVE&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">else</span> cout&lt;&lt;<span class="string">&quot;DEAD&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="B-最大价值"><a href="#B-最大价值" class="headerlink" title="B 最大价值"></a>B 最大价值</h2><p><strong>描述</strong><br>已知，小写字母 a∼z 的价值分别为 w<del>a</del>,w<del>b</del>,…,w<del>z</del>。</p><p>对于一个由小写字母构成的长度为 l 的字符串 S&#x3D;s<del>1</del>s<del>2</del>…s<del>l</del>，其价值为 w<del>s1</del>×1+w<del>s2</del>×2+…+w<del>sl</del>×l。</p><p>现在，给定一个由小写字母构成的字符串 S，请你在这个字符串中插入 k 个小写字母，要求最终得到的字符串的价值尽可能大。<br><strong>注意</strong></p><ul><li>插入的位置可以随意选。</li><li>插入的字母也可以随意选，可以插入不同字母。</li></ul><p>输出最大可能价值。</p><p><strong>输入格式</strong><br>第一行包含一个字符串 S。</p><p>第二行包含一个整数 k。</p><p>第三行包含 26 个整数 w<del>a</del>,w<del>b</del>,…,w<del>z</del><br><strong>输出格式</strong><br>一个整数，表示最大可能价值。<br><strong>数据范围</strong><br>前 3 个测试点满足，S 的长度范围 [1,5]。<br>所有测试点满足，S 的长度范围 [1,1000]，0≤k≤10^3^，w<del>a</del>∼w<del>z</del> 的取值范围 [0,1000]。</p><p><strong>思路</strong></p><ul><li>要想使的价值最大,只需要在字符串s最后面加上a~z价值最大的字母,即可</li></ul><p><strong>ACcode</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a[<span class="number">26</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s;</span><br><span class="line">    <span class="type">int</span> k;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    cin&gt;&gt;s&gt;&gt;k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i ++) cin&gt;&gt;a[i];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        res +=(i+<span class="number">1</span>) * a[s[i] - <span class="string">&#x27;a&#x27;</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(a,a+<span class="number">26</span>,<span class="built_in">greater</span>());</span><br><span class="line">   </span><br><span class="line">    <span class="type">int</span> j = s.<span class="built_in">size</span>() + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(k--)</span><br><span class="line">    &#123;</span><br><span class="line">         res += a[<span class="number">0</span>] * j;</span><br><span class="line">         j++;</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">    cout&lt;&lt;res&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C危险程度"><a href="#C危险程度" class="headerlink" title="C危险程度"></a>C危险程度</h2><p><strong>描述</strong><br>有 n 种化学物质，编号 1∼n。</p><p>其中，有 m 对物质之间会发生反应。</p><p>现在，要将这些化学物质逐个倒入同一个试管之中，具体倒入顺序不限。</p><p>我们需要计算一下试管的危险值。</p><p>已知，空试管的危险值为 1，每倒入一种化学物质，如果该物质能够与之前倒入试管中的一种或多种物质发生反应，则试管的危险值将乘以 2。</p><p>请你计算并输出，通过合理安排所有化学物质的倒入顺序，能够得到的试管的最大危险值。<br><strong>输入格式</strong><br>第一行包含两个整数 n,m。</p><p>接下来 m 行，每行包含两个整数 x,y，表示化学物质 x 和化学物质 y 之间会发生反应。保证同一对化学物质在输入中最多出现一次。<br><strong>输出格式</strong><br>一个整数，表示最大危险值。<br><strong>数据范围</strong><br>前 4 个测试点满足 1≤n≤10。<br>所有测试点满足 1≤n≤50，0≤m≤n(n−1)2，1≤x&lt;y≤n。<br><strong>输入样例1</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 0</span><br></pre></td></tr></table></figure><p><strong>输出样例1</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><p><strong>输入样例2</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2 1</span><br><span class="line">1 2</span><br></pre></td></tr></table></figure><p><strong>输出样例2</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><p><strong>思路</strong></p><ul><li>将能相互发生反应的放在一个集合（连通块），每个连通块最大贡献是pow(2,cnt - 1),cnt是连通块里面数字个数，最大总贡献是每个连通块的乘积S &#x3D; pow(2,cnt1 - 1) * pow(2,cnt2 - 1)*…*pow(2,cntn - 1)，这样的话求连通块的数量和每个连通块点得数量就可以算出结果</li><li>总贡献可以化简为S &#x3D; pow(2,n -cnt) 这里cnt 是连通块的数量，这样只用求连通块的数量即可算出结果</li></ul><p><strong>注意</strong></p><ul><li>最大爆炸是pow(2,49) 会爆int</li></ul><p><strong>AC code</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">60</span>;</span><br><span class="line"><span class="type">int</span> p[N];</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(p[x] != x) p[x] = <span class="built_in">find</span>(p[x]);</span><br><span class="line">    <span class="keyword">return</span> p[x];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n;i ++) p[i] = i;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> cnt = n; <span class="comment">// 记录连通块的数量</span></span><br><span class="line">    <span class="keyword">while</span>(m--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a,b;</span><br><span class="line">        cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">find</span>(a) != <span class="built_in">find</span>(b))</span><br><span class="line">        &#123;</span><br><span class="line">             p[<span class="built_in">find</span>(a)] = <span class="built_in">find</span>(b);</span><br><span class="line">            cnt --;</span><br><span class="line">           </span><br><span class="line">        &#125;</span><br><span class="line">       </span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;(<span class="type">long</span> <span class="type">long</span>)<span class="built_in">pow</span>(<span class="number">2</span>,n-cnt);<span class="comment">//注意pow计算的结果如果很大的会，会用科学计数法表示，注意强制转化</span></span><br><span class="line">    <span class="comment">// cout&lt;&lt;(1LL&lt;&lt;n - cnt)&lt;&lt;endl;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Acwing周赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蓝桥杯集训（未完）</title>
      <link href="/2023/01/05/%E8%93%9D%E6%A1%A5%E6%9D%AF%E9%9B%86%E8%AE%AD/"/>
      <url>/2023/01/05/%E8%93%9D%E6%A1%A5%E6%9D%AF%E9%9B%86%E8%AE%AD/</url>
      
        <content type="html"><![CDATA[<h3 id="第一章模拟"><a href="#第一章模拟" class="headerlink" title="第一章模拟"></a>第一章模拟</h3><h4 id="编程1成绩统计"><a href="#编程1成绩统计" class="headerlink" title="编程1成绩统计"></a>编程1成绩统计</h4><p><a href="https://www.acwing.com/problem/content/2874/">题目链接</a><br><strong>题目描述</strong><br>小蓝给学生们组织了一场考试，卷面总分为 100 分，每个学生的得分都是一个 0 到 100 的整数。<br>如果得分至少是 60 分，则称为及格。<br>如果得分至少为 85 分，则称为优秀。<br>请计算及格率和优秀率，用百分数表示，百分号前的部分四舍五入保留整数.</p><p><strong>输入格式</strong><br>输入的第一行包含一个整数 n，表示考试人数。<br>接下来 n 行，每行包含一个 0 至 100 的整数，表示一个学生的得分。<br><strong>输出格式</strong><br>输出两行，每行一个百分数，分别表示及格率和优秀率。<br>百分号前的部分四舍五入保留整数。<br>数据范围<br>对于 50% 的评测用例，1≤n≤100。<br>对于所有评测用例，1≤n≤10000。<br><strong>输入样例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">7</span><br><span class="line">80</span><br><span class="line">92</span><br><span class="line">56</span><br><span class="line">74</span><br><span class="line">88</span><br><span class="line">100</span><br><span class="line">0</span><br></pre></td></tr></table></figure><p><strong>输出样例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">71%</span><br><span class="line">43%</span><br></pre></td></tr></table></figure><p>  <em><strong>提示 : 注意本题需要四舍五入保留整数部分，（不要想当然的int下取整），要使用double类型存储。</strong></em><br> <strong>ACcode</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="type">int</span> cnt = <span class="number">0</span>; <span class="comment">//记录超过60分的人</span></span><br><span class="line">    <span class="type">int</span> cnt2 = <span class="number">0</span>; <span class="comment">//超过85分的人</span></span><br><span class="line">    <span class="type">int</span> b = n; <span class="comment">//记录一下总人数</span></span><br><span class="line">    <span class="keyword">while</span>(n--)  <span class="comment">//n次循环</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">        <span class="keyword">if</span>(x &gt;= <span class="number">60</span>) cnt++;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(x&gt;=<span class="number">85</span>) cnt2++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.0lf%\n&quot;</span>,cnt*<span class="number">100</span>*<span class="number">1.0</span> / b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.0lf%\n&quot;</span>,cnt2*<span class="number">100</span>*<span class="number">1.0</span>/b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编程2-成绩分析"><a href="#编程2-成绩分析" class="headerlink" title="编程2: 成绩分析"></a>编程2: 成绩分析</h4><p><a href="https://www.acwing.com/problem/content/2869/">题目链接</a><br><strong>描述:</strong><br>小蓝给学生们组织了一场考试，卷面总分为 100 分，每个学生的得分都是一个 0 到 100 的整数。<br>请计算这次考试的最高分、最低分和平均分。<br><strong>输入格式</strong><br>输入的第一行包含一个整数 n，表示考试人数。<br>接下来 n 行，每行包含一个 0 至 100 的整数，表示一个学生的得分。<br><strong>输出格式</strong><br>输出三行。<br>第一行包含一个整数，表示最高分。<br>第二行包含一个整数，表示最低分。<br>第三行包含一个实数，四舍五入保留正好两位小数，表示平均分。<br><strong>数据范围</strong><br>对于 50% 的评测用例，1≤n≤100。<br>对于所有评测用例，1≤n≤10000。<br><strong>输入样例</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">7</span><br><span class="line">80</span><br><span class="line">92</span><br><span class="line">56</span><br><span class="line">74</span><br><span class="line">88</span><br><span class="line">99</span><br><span class="line">10</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">99</span><br><span class="line">10</span><br><span class="line">71.29</span><br></pre></td></tr></table></figure><p><strong>思路</strong>  模拟</p><p><strong>ACcode</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">int</span> max0 = <span class="number">-1</span>; <span class="comment">/*为什么定义他等于 -1，为了确保题目的最大值是题目本身的输入，</span></span><br><span class="line"><span class="comment">       例如定义max0 =110，那么最后的最大值就是110，不是题目输入的数据*/</span></span><br><span class="line">    <span class="type">int</span> min0 = <span class="number">999</span>;  <span class="comment">// 同上</span></span><br><span class="line">    <span class="type">double</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="type">int</span> b = n; <span class="comment">//存一下</span></span><br><span class="line">    <span class="keyword">while</span>(n--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">        max0 = x &gt; max0 ? x:max0;  <span class="comment">//三元运算符</span></span><br><span class="line">        min0 = x &lt; min0 ? x:min0;</span><br><span class="line">        sum +=x;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n%d\n&quot;</span>,max0,min0);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2lf&quot;</span>,sum /b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="编程3-刷题统计"><a href="#编程3-刷题统计" class="headerlink" title="编程3:刷题统计"></a>编程3:刷题统计</h4><p><a href="https://www.acwing.com/problem/content/4405/">题目链接</a><br><strong>描述</strong><br>小明决定从下周一开始努力刷题准备蓝桥杯竞赛。<br>他计划周一至周五每天做 a 道题目，周六和周日每天做 b 道题目。<br>请你帮小明计算，按照计划他将在第几天实现做题数大于等于 n 题？<br><strong>输入格式</strong><br>输入一行包含三个整数 a,b 和 n。<br><strong>输出格式</strong><br>输出一个整数代表天数。<br><strong>数据范围</strong><br>对于 50% 的评测用例，1≤a,b,n≤10^6，<br>对于 100% 的评测用例，1≤a,b,n≤10^18。<br><strong>输入样例</strong><br><code>10 20 99</code><br><strong>输出样例</strong><br><code>8</code><br><strong>思路</strong> 以一个星期为周期考虑,先考虑做了几个整个周期,在单独判断剩下(不到一个周期的)需要做几天</p><p><strong>ACcode</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="type">long</span> <span class="type">long</span> <span class="type">int</span>  a,b,n;   <span class="comment">//数据最大1e18 开longlong</span></span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld%lld&quot;</span>,&amp;a,&amp;b,&amp;n);</span><br><span class="line">  <span class="type">long</span> <span class="type">long</span>  sum = <span class="number">0</span>;   <span class="comment">//临时记录做题数目</span></span><br><span class="line">  <span class="type">long</span> <span class="type">long</span>  cnt = <span class="number">0</span>;   <span class="comment">//所用天数</span></span><br><span class="line">  <span class="type">long</span> <span class="type">long</span>  t = a* <span class="number">5</span> + b * <span class="number">2</span>; <span class="comment">//一个周期（7天）做的题目</span></span><br><span class="line">  </span><br><span class="line">   </span><br><span class="line">    <span class="keyword">if</span>(n%t ==<span class="number">0</span> )    <span class="comment">//做了好多整数周期 无剩余题目</span></span><br><span class="line">     cnt  = n/t * <span class="number">7</span>; <span class="comment">//做了几个整个周期的天数</span></span><br><span class="line">    <span class="keyword">else</span>             <span class="comment">//不是整个周期</span></span><br><span class="line">    &#123;</span><br><span class="line">        cnt  = n/t * <span class="number">7</span>; <span class="comment">//做了几个整个周期的天数</span></span><br><span class="line">        n = n % t;      <span class="comment">//剩余的不是整个周期   还要做多少题目</span></span><br><span class="line">      <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;=<span class="number">7</span>; i++) <span class="comment">//整个循环 是计算剩余题目还要做几天</span></span><br><span class="line">      &#123;</span><br><span class="line">       <span class="keyword">if</span>(i &lt;=<span class="number">5</span>) </span><br><span class="line">       &#123;</span><br><span class="line">       cnt++;</span><br><span class="line">       sum +=a;</span><br><span class="line">       &#125;</span><br><span class="line">      <span class="keyword">if</span>(i &gt;=<span class="number">6</span>)</span><br><span class="line">      &#123;</span><br><span class="line">      cnt++;</span><br><span class="line">      sum +=b;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">if</span>(sum &gt;= n)</span><br><span class="line">    <span class="keyword">break</span>; <span class="comment">//跳出循环</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>,cnt);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编程4-纸张尺寸"><a href="#编程4-纸张尺寸" class="headerlink" title="编程4:纸张尺寸"></a>编程4:纸张尺寸</h4><p><a href="https://www.acwing.com/problem/content/4655/">原题链接</a><br><strong>描述</strong><br>在 ISO 国际标准中定义了 A0 纸张的大小为 1189mm×841mm，将 A0 纸沿长边对折后为 A1 纸，大小为 841mm×594mm，在对折的过程中长度直接取下整（实际裁剪时可能有损耗）。<br>将 A1 纸沿长边对折后为 A2 纸，依此类推。<br>输入纸张的名称，请输出纸张的大小。<br><strong>输入格式</strong><br>输入一行包含一个字符串表示纸张的名称，该名称一定是 A0、A1、A2、A3、A4、A5、A6、A7、A8、A9 之一。<br><strong>输出格式</strong><br>输出两行，每行包含一个整数，依次表示长边和短边的长度。<br><strong>输入样例1</strong><br><code>A0</code><br><strong>输出样例1</strong><br><code>1189</code><br><code>841</code><br><strong>输入样例2</strong><br><code>A1</code><br><strong>输出样例</strong><br><code>841</code><br><code>594</code></p><p><strong>思路</strong> A0到A1，对折1次，A0到A2，对折2次，所以直接An就是对折n次,每次对折后长边会变成短边</p><p><strong>ACcode</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;ch&gt;&gt;n;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">1189</span>,b = <span class="number">841</span>; <span class="comment">//a是长边 b是短边</span></span><br><span class="line">   <span class="comment">//A0到A1，对折1次，A0到A2，对折2次，所以直接 n --即可,n就是对折次数</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(n--)</span><br><span class="line">    &#123;</span><br><span class="line">        a = a/<span class="number">2</span>;  <span class="comment">// 长边对折</span></span><br><span class="line">        <span class="built_in">swap</span>(a,b); <span class="comment">// 每次对折 就会使长边变成短边 所以数值交换一下使的a还是长边</span></span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;a&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;b&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编程5-数位排序"><a href="#编程5-数位排序" class="headerlink" title="编程5:数位排序"></a>编程5:数位排序</h4><p><a href="(https://www.acwing.com/problem/content/description/4656/">原题链接</a></p><p><strong>描述</strong><br>小蓝对一个数的数位之和很感兴趣, 今天他要按照数位之和给数排序。当 两个数各个数位之和不同时, 将数位和较小的排在前面, 当数位之和相等时, 将数值小的排在前面。<br>例如, 2022 排在 409 前面, 因为 2022 的数位之和是 6, 小于 409 的数位 之和 13 。<br>又如, 6 排在 2022 前面, 因为它们的数位之和相同, 而 6 小于 2022 。<br>给定正整数 n,,m, 请问对 1 到 n 采用这种方法排序时, 排在第 m个的元 素是多少?<br><strong>输入格式</strong><br>输入第一行包含一个正整数 n。<br>第二行包含一个正整数 m。<br><strong>输出格式</strong><br>输出一行包含一个整数，表示答案。<br><strong>数据范围</strong><br>对于 30% 的评测用例，1≤m≤n≤300。<br>对于 50% 的评测用例，1≤m≤n≤1000。<br>对于所有评测用例，1≤m≤n≤10^6。<br><strong>输入样例</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">13</span><br><span class="line">5</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><p><strong>样例解释</strong><br>1 到 13 的排序为：1,10,2,11,3,12,4,13,5,6,7,8,9。<br>第 5 个数为 3。<br><strong>思路</strong><br>  从1~n存入a[n]数组,按照题目排序要求自定义比较函数对a数组排序,输出a[m]即可.</p><p><strong>ACcode</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a[N],b[N];<span class="comment">//a使原数组 b使数位之和数组</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//当两个数各个数位之和不同时，将数位和较小的排在前面，当数位之和相等时，将数值小的排在前面。</span></span><br><span class="line">    <span class="comment">// if(b[x] != b[y]) return b[x] &lt; b[y];</span></span><br><span class="line">    <span class="comment">// if(b[x] == b[y]) return x &lt; y;</span></span><br><span class="line">     <span class="keyword">return</span> b[x] &lt; b[y] || b[x] == b[y] &amp;&amp; x &lt; y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,m;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;=n; i ++)</span><br><span class="line">    &#123;</span><br><span class="line">       a[i] = i;</span><br><span class="line">       <span class="type">int</span> x = i;</span><br><span class="line">       <span class="keyword">while</span>(x)</span><br><span class="line">       &#123;</span><br><span class="line">           b[i] += x%<span class="number">10</span>;</span><br><span class="line">           x = x / <span class="number">10</span>;</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(a+<span class="number">1</span>,a+<span class="number">1</span>+n,cmp);</span><br><span class="line">    </span><br><span class="line">    cout&lt;&lt;a[m]&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编程6-数字反转"><a href="#编程6-数字反转" class="headerlink" title="编程6:数字反转"></a>编程6:数字反转</h4><p><a href="https://www.acwing.com/problem/content/447/">原题链接</a></p><p><strong>描述</strong><br>给定一个整数，请将该数各个位上数字反转得到一个新数。<br>新数也应满足整数的常见形式，即除非给定的原数为零，否则反转后得到的新数的最高位数字不应为零。<br><strong>输入格式</strong><br>输入共 1 行，1 个整数 N。<br><strong>输出格式</strong><br>输出共 1 行，1 个整数表示反转后的新数。<br><strong>数据范围</strong><br>|N|≤10^9<br><strong>样例输入</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">123</span><br></pre></td></tr></table></figure><p><strong>样例输出</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">321</span><br></pre></td></tr></table></figure><p><strong>样例输入2</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-380</span><br></pre></td></tr></table></figure><p><strong>样例输出2</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-83</span><br></pre></td></tr></table></figure><p><strong>思路</strong><br>  将一个整数反转，如果是该数小于零，就先标记一下，然后将数字反转，反转后若有前导0则需要删除前导0<br><strong>ACcode</strong><br>**解法一 : int  **</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> res;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">if</span>(n &lt; <span class="number">0</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;-&quot;</span>;</span><br><span class="line">        n = -n;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(n)</span><br><span class="line">    &#123;</span><br><span class="line">       res = res*<span class="number">10</span> + n%<span class="number">10</span>;</span><br><span class="line">       n /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;res;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>解法二 : 字符串</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">include&lt;iostream&gt;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s;</span><br><span class="line">    cin&gt;&gt;s;</span><br><span class="line">    <span class="keyword">if</span>(s[<span class="number">0</span>] == <span class="string">&#x27;-&#x27;</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&#x27;-&#x27;</span>;</span><br><span class="line">        s.<span class="built_in">erase</span>(s.<span class="built_in">begin</span>());<span class="comment">//删除&#x27;-&#x27;号</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//反转字符串</span></span><br><span class="line">    <span class="built_in">reverse</span>(s.<span class="built_in">begin</span>(),s.<span class="built_in">end</span>());</span><br><span class="line">    <span class="comment">//去除前导0</span></span><br><span class="line">    <span class="keyword">while</span>(s.<span class="built_in">size</span>() &gt; <span class="number">1</span> &amp;&amp;s[<span class="number">0</span>] ==<span class="string">&#x27;0&#x27;</span>) s.<span class="built_in">erase</span>(s.<span class="built_in">begin</span>()); </span><br><span class="line">    cout&lt;&lt;s&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编程7-ISBN号码"><a href="#编程7-ISBN号码" class="headerlink" title="编程7:ISBN号码"></a>编程7:ISBN号码</h4><p><a href="https://www.acwing.com/problem/content/3196/">原题链接</a><br><strong>描述</strong><br>每一本正式出版的图书都有一个 ISBN 号码与之对应。<br>ISBN 码包括 9 位数字、1 位识别码和 3 位分隔符，其规定格式如 x-xxx-xxxxx-x，其中符号 - 是分隔符（键盘上的减号），最后一位是识别码，例如 0-670-82162-4 就是一个标准的ISBN码。<br>ISBN 码的首位数字表示书籍的出版语言，例如 0 代表英语；第一个分隔符 - 之后的三位数字代表出版社，例如 670 代表维京出版社；第二个分隔之后的五位数字代表该书在出版社的编号；最后一位为识别码。<br>识别码的计算方法如下：<br>首位数字乘以 1 加上次位数字乘以 2……以此类推，用所得的结果 mod11，所得的余数即为识别码，如果余数为 10，则识别码为大写字母 X。<br>例如 ISBN 号码 0-670-82162-4 中的识别码 4 是这样得到的：对 067082162 这 9 个数字，从左至右，分别乘以 1,2,…,9，再求和，即 0×1+6×2+……+2×9&#x3D;158，然后取 158mod11 的结果 4 作为识别码。<br>编写程序判断输入的 ISBN 号码中识别码是否正确，如果正确，则仅输出 Right；如果错误，则输出是正确的 ISBN 号码。<br><strong>输入格式</strong><br>输入只有一行，是一个字符序列，表示一本书的 ISBN 号码（保证输入符合 ISBN 号码的格式要求）。<br><strong>输出格式</strong><br>输出一行，假如输入的 ISBN 号码的识别码正确，那么输出 Right，否则，按照规定的格式，输出正确的 ISBN 号码（包括分隔符 -）。<br><strong>输入样例1</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0-670-82162-4</span><br></pre></td></tr></table></figure><p><strong>输出样例1</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Right</span><br></pre></td></tr></table></figure><p><strong>输入样例2</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0-670-82162-0</span><br></pre></td></tr></table></figure><p><strong>输出样例2</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0-670-82162-4</span><br></pre></td></tr></table></figure><p><strong>思路</strong><br>  根据题中给的规则，计算出识别码，验证此 ISBN 码是否正确<br>  正确输出Right<br>  错误输出正确的ISBN 只需要更改最后一位即可</p><p><strong>Accode</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s;</span><br><span class="line">    cin&gt;&gt;s;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> k = <span class="number">0</span>; <span class="comment">//计算isbn号中是第一个数字</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>() - <span class="number">1</span>; i ++) <span class="comment">//从前向后遍历(注意去尾)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i] !=<span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            k++;</span><br><span class="line">            <span class="type">int</span> a = s[i] - <span class="string">&#x27;0&#x27;</span>; <span class="comment">//将字符转化为int类型进行数学运算</span></span><br><span class="line">            res += a * k;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    res = res % <span class="number">11</span>;</span><br><span class="line">    <span class="type">char</span> ch = <span class="string">&#x27;X&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>(res &lt; <span class="number">10</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ch = res + <span class="string">&#x27;0&#x27;</span>; <span class="comment">//将整数转化成字符类型</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(s.<span class="built_in">back</span>() == ch) <span class="built_in">puts</span>(<span class="string">&quot;Right&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        s.<span class="built_in">back</span>() = ch; <span class="comment">//更改最后一位</span></span><br><span class="line">        cout&lt;&lt;s&lt;&lt;endl;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编程8-天干地支"><a href="#编程8-天干地支" class="headerlink" title="编程8:天干地支"></a>编程8:天干地支</h4><p><a href="https://www.luogu.com.cn/problem/P8738">原题链接</a><br><strong>描述</strong><br>古代中国使用天干地支来记录当前的年份。</p><p>天干一共有十个，分别为：甲（jiǎ）、乙（yǐ）、丙（bǐng）、丁（dīng）、戊 （wù）、己（jǐ）、庚（gēng）、辛（xīn）、壬（rén）、癸（guǐ）。</p><p>地支一共有十二个，分别为：子（zǐ）、丑（chǒu）、寅（yín）、卯（mǎo）、辰（chén）、巳（sì）、午（wǔ）、未（wèi）、申（shēn）、酉（yǒu）、戌（xū）、亥（hài）。</p><p>将天干和地支连起来，就组成了一个天干地支的年份，例如：甲子。2020 年是庚子年。</p><p>每过一年，天干和地支都会移动到下一个。例如 2021 年是辛丑年。</p><p>每过 60 年，天干会循环 6 轮，地支会循环 5 轮，所以天干地支纪年每 60年轮回一次。例如 1900 年，1960 年，2020 年都是庚子年。</p><p>给定一个公元纪年的年份，请输出这一年的天干地支年份。<br><strong>输入格式</strong><br>输入一行包含一个正整数，表示公元年份。<br><strong>输出格式</strong><br>输出一个拼音，表示天干地支的年份，天干和地支都用小写拼音表示（不表示声调），之间不要加入任何多余的字符。<br><strong>输入样例</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2020</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gengzi</span><br></pre></td></tr></table></figure><p><strong>思路</strong><br>  首先求出0000年分的天干地支然后根据给的年份以0000年为基准求得所求年份的天干地支<br>  由题意得 2020 年为庚子年，且 60 年为一个大循环，即 1960 和 2080 均为庚子年，同理可得 0040 年为庚子年（0040+60*31&#x3D;2020）<br>  根据<br>  天干每10年循环一次,所以0000年为庚 x 年<br>  地支每12年循环一次,所以0000年为 x 申年<br>  综上所述，0000 年为庚申年</p><p><strong>ACcode</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">string tiangan[] = &#123;</span><br><span class="line">    <span class="string">&quot;geng&quot;</span>, <span class="string">&quot;xin&quot;</span>, <span class="string">&quot;ren&quot;</span>, <span class="string">&quot;gui&quot;</span>, <span class="string">&quot;jia&quot;</span>, <span class="string">&quot;yi&quot;</span>, <span class="string">&quot;bing&quot;</span>, <span class="string">&quot;ding&quot;</span>, <span class="string">&quot;wu&quot;</span>, <span class="string">&quot;ji&quot;</span></span><br><span class="line">&#125;, dizhi[] = &#123;</span><br><span class="line">    <span class="string">&quot;shen&quot;</span>, <span class="string">&quot;you&quot;</span>, <span class="string">&quot;xu&quot;</span>, <span class="string">&quot;hai&quot;</span>, <span class="string">&quot;zi&quot;</span>, <span class="string">&quot;chou&quot;</span>, <span class="string">&quot;yin&quot;</span>, <span class="string">&quot;mao&quot;</span>, <span class="string">&quot;chen&quot;</span>, <span class="string">&quot;si&quot;</span>, <span class="string">&quot;wu&quot;</span>, <span class="string">&quot;wei&quot;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    cout&lt;&lt;tiangan[n%<span class="number">10</span>]&lt;&lt;dizhi[n%<span class="number">12</span>]&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第二章枚举"><a href="#第二章枚举" class="headerlink" title="第二章枚举"></a>第二章枚举</h3><h4 id="编程1-单词分析"><a href="#编程1-单词分析" class="headerlink" title="编程1:单词分析"></a>编程1:单词分析</h4><p><a href="https://www.acwing.com/problem/content/description/3306/">原题链接</a><br><strong>描述</strong><br>小蓝正在学习一门神奇的语言，这门语言中的单词都是由小写英文字母组成，有些单词很长，远远超过正常英文单词的长度。</p><p>小蓝学了很长时间也记不住一些单词，他准备不再完全记忆这些单词，而是根据单词中哪个字母出现得最多来分辨单词。</p><p>现在，请你帮助小蓝，给了一个单词后，帮助他找到出现最多的字母和这个字母出现的次数。<br><strong>输入格数</strong><br>输入一行包含一个单词，单词只由小写英文字母组成。<br><strong>输出格式</strong><br>输出两行，第一行包含一个英文字母，表示单词中出现得最多的字母是哪个。如果有多个字母出现的次数相等，输出字典序最小的那个。</p><p>第二行包含一个整数，表示出现得最多的那个字母在单词中出现的次数。<br><strong>数据范围</strong><br>对于所有的评测用例，输入的单词长度不超过 1000。<br><strong>输入样例1</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lanqiao</span><br></pre></td></tr></table></figure><p><strong>输出样例1</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a</span><br><span class="line">2</span><br></pre></td></tr></table></figure><p><strong>样例输入2</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">longlonglongistoolong</span><br></pre></td></tr></table></figure><p><strong>样例输出2</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">o</span><br><span class="line">6</span><br></pre></td></tr></table></figure><p><strong>思路</strong><br>  <strong>思路一</strong>对所给的字符串进行排序(对字符串排序是按照字典序大小进行排序的),这样所得的字符串是从小到大若有相同字符的一定会在一起例如<strong>lanqiao</strong>排序后是<strong>aailnoq</strong><br>  对排序后的字符串进行处理输出最多出现次数的单词即可</p><p>  <strong>思路二</strong>直接遍历计算每个数字出现的次数,然后从’a’~’z’找出第一个最多出现的字符</p><p><strong>ACcode</strong><br><strong>解法一</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">char</span> ch;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s;</span><br><span class="line">    cin&gt;&gt;s;</span><br><span class="line">    <span class="built_in">sort</span>(s.<span class="built_in">begin</span>(),s.<span class="built_in">end</span>());</span><br><span class="line">     <span class="type">int</span> cnt = <span class="number">1</span>; <span class="comment">//</span></span><br><span class="line">     <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">     <span class="keyword">if</span>(s.<span class="built_in">size</span>() ==<span class="number">1</span>) cout&lt;&lt;s&lt;&lt;endl&lt;&lt;<span class="number">1</span>&lt;&lt;endl;</span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">     &#123;</span><br><span class="line">          <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>() - <span class="number">1</span>; i ++) <span class="comment">// 因为写法原因注意去尾</span></span><br><span class="line">         &#123;</span><br><span class="line">              <span class="keyword">if</span>(s[i] == s[i+<span class="number">1</span>]) cnt++;  <span class="comment">//如果相邻字符相同就计数就加一</span></span><br><span class="line">              <span class="keyword">else</span>                       <span class="comment">//如果不同判断字符出现的次数是不是大于之前出现的次数</span></span><br><span class="line">              &#123;</span><br><span class="line">                  <span class="keyword">if</span>(cnt &gt; res)          <span class="comment">//大于则更新答案</span></span><br><span class="line">                  &#123; </span><br><span class="line">                      res = cnt;</span><br><span class="line">                      ch = s[i];</span><br><span class="line">                  &#125;</span><br><span class="line">                  cnt = <span class="number">1</span>;              <span class="comment">//重置计数</span></span><br><span class="line">              &#125;</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ch&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;res;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>解法二</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> cnt[<span class="number">30</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s;</span><br><span class="line">    cin&gt;&gt;s;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        cnt[s[i] - <span class="string">&#x27;a&#x27;</span>] ++; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(cnt[i] &gt; res)</span><br><span class="line">        &#123;</span><br><span class="line">            res = cnt[i];</span><br><span class="line">            ch = i + <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ch&lt;&lt;endl&lt;&lt;res&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编程2-时间显示"><a href="#编程2-时间显示" class="headerlink" title="编程2:时间显示"></a>编程2:时间显示</h4><p><a href="https://www.acwing.com/problem/content/3419/">原题链接</a><br><strong>描述</strong><br>小蓝要和朋友合作开发一个时间显示的网站。</p><p>在服务器上，朋友已经获取了当前的时间，用一个整数表示，值为从 1970 年 1 月 1 日 00:00:00 到当前时刻经过的毫秒数。</p><p>现在，小蓝要在客户端显示出这个时间。</p><p>小蓝不用显示出年月日，只需要显示出时分秒即可，毫秒也不用显示，直接舍去即可。</p><p>给定一个用整数表示的时间，请将这个时间对应的时分秒输出。<br><strong>输入格式</strong><br>输入一行包含一个整数，表示时间。<br><strong>输出格式</strong><br>输出时分秒表示的当前时间，格式形如 HH:MM:SS，其中 HH 表示时，值为 0 到 23，MM 表示分，值为 0 到 59，SS 表示秒，值为 0 到 59。<br>时、分、秒不足两位时补前导 0。<br><strong>数据范围</strong><br>对于所有评测用例，给定的时间为不超过 10^18 的正整数。<br><strong>输入样例1</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">46800999</span><br></pre></td></tr></table></figure><p><strong>输出样例1</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">13:00:00</span><br></pre></td></tr></table></figure><p><strong>输入样例2</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1618708103123</span><br></pre></td></tr></table></figure><p><strong>输出样例2</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">01:08:23</span><br></pre></td></tr></table></figure><p><strong>思路</strong> 先把毫秒转化成秒在进行处理更方便  1s &#x3D; 1000ms<br><strong>注意</strong> 数据范围超出int  应该开long long 存储 还有输出格式</p><p><strong>ACcode</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    </span><br><span class="line">    n = n /<span class="number">1000</span>; <span class="comment">// 换成秒数</span></span><br><span class="line">    n = n % (<span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>); <span class="comment">//剩余一天内的秒数</span></span><br><span class="line">    <span class="type">int</span> h = n /(<span class="number">60</span>*<span class="number">60</span>);</span><br><span class="line">    <span class="type">int</span> m = n%(<span class="number">60</span>*<span class="number">60</span>)/<span class="number">60</span>;</span><br><span class="line">    <span class="type">int</span> s = n%<span class="number">60</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%02d:%02d:%02d&quot;</span>,h,m,s);</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编程3-赢球票"><a href="#编程3-赢球票" class="headerlink" title="编程3: 赢球票"></a>编程3: 赢球票</h4><p><a href="https://www.luogu.com.cn/problem/P8641">原题链接</a><br><strong>描述</strong><br>某机构举办球票大奖赛。获奖选手有机会赢得若干张球票。</p><p>主持人拿出 NN 张卡片（上面写着 1 \sim N1∼N 的数字），打乱顺序，排成一个圆圈。</p><p>你可以从任意一张卡片开始顺时针数数 :1,2,3 \cdots:1,2,3⋯。</p><p>如果数到的数字刚好和卡片上的数字相同，则把该卡片收入囊中，从下一个卡片重新数数。</p><p>直到再无法收获任何卡片，游戏结束。囊中卡片数字的和就是赢得球票的张数。</p><p>比如：</p><p>卡片排列是：1,2,31,2,3。</p><p>我们从 11 号卡开始数，就把 11 号卡拿走。再从 22 号卡开始，但数的数字无法与卡片对上，</p><p>很快数字越来越大，不可能再拿走卡片了。因此这次我们只赢得了 11 张球票。</p><p>还不算太坏！如果我们开始就傻傻地从 22 或 33 号卡片数起，那就一张卡片都拿不到了。</p><p>如果运气好，卡片排列是 2,1,32,1,3。</p><p>那我们可以顺利拿到所有的卡片！</p><p>本题的目标就是：已知顺时针卡片序列。</p><p>随便你从哪里开始数，求最多能赢多少张球票（就是收入囊中的卡片数字之和）<br><strong>输入格式</strong><br>第一行一个整数 N(N&lt;100)N(N&lt;100)，表示卡片数目。</p><p>第二行 NN 个整数，表示顺时针排列的卡片。<br><strong>输出格式</strong><br>一行，一个整数，表示最好情况下能赢得多少张球票。<br><strong>输入样例1</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">1 2 3</span><br></pre></td></tr></table></figure><p><strong>输出样例1</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><p><strong>输入样例2</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">2 1 3</span><br></pre></td></tr></table></figure><p><strong>输出样例2</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure><p><strong>思路</strong><br>  题目最大数据100,可以暴力枚举从每一个位置开始数,记录最大的那个和就可以</p><p><strong>ACcode</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">110</span>;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">bool</span> st[N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">get</span><span class="params">(<span class="type">int</span> k,<span class="type">int</span> a[],<span class="type">bool</span> st[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> cnt = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">  &#123;</span><br><span class="line">      <span class="keyword">while</span>(st[k] == <span class="literal">true</span>) <span class="comment">//找到未被拿走的卡片</span></span><br><span class="line">      &#123;</span><br><span class="line">          k = (k + <span class="number">1</span>) %n;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(a[k] == cnt) <span class="comment">//数的数子和卡片的数字相同</span></span><br><span class="line">      &#123;</span><br><span class="line">          res += a[k];</span><br><span class="line">          st[k] = <span class="literal">true</span>;</span><br><span class="line">          k = (k + <span class="number">1</span>) %n;</span><br><span class="line">          cnt = <span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">          k = (k + <span class="number">1</span>) % n;</span><br><span class="line">          cnt++;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//游戏结束的条件一 都拿走了 卡片状态全是true</span></span><br><span class="line">        <span class="type">int</span> cnt2= <span class="number">0</span> ;<span class="comment">//记录被拿走卡片的个数</span></span><br><span class="line">      <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++)</span><br><span class="line">      &#123;</span><br><span class="line">          <span class="keyword">if</span>(st[i]== <span class="literal">true</span>) cnt2++;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(cnt2 == n) <span class="keyword">return</span> res;</span><br><span class="line">      <span class="comment">//游戏结束的条件二 数的数字大于n 则不可能再取出卡片</span></span><br><span class="line">      <span class="keyword">if</span>(cnt &gt; n) <span class="keyword">return</span> res;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="type">bool</span> st[N] = &#123;<span class="literal">false</span>&#125;;</span><br><span class="line">  cin&gt;&gt;n;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++)</span><br><span class="line">  &#123;</span><br><span class="line">    cin&gt;&gt;a[i];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++)</span><br><span class="line">  &#123;</span><br><span class="line">       <span class="type">bool</span> st[N] = &#123;<span class="literal">false</span>&#125;; </span><br><span class="line">    res = <span class="built_in">max</span>(res,<span class="built_in">get</span>(i,a,st));<span class="comment">//从不同的位置开始数</span></span><br><span class="line">  &#125;</span><br><span class="line">  cout&lt;&lt;res&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>问题???</strong><br>当传入参数的名字和全局变量一样的话,在函数里面执行会不会该别全局变量的值??</p><h4 id="编程4-回文日期"><a href="#编程4-回文日期" class="headerlink" title="编程4:回文日期"></a>编程4:回文日期</h4><p><a href="https://www.acwing.com/problem/content/description/2870/">原题链接</a><br><strong>描述</strong><br>2020 年春节期间，有一个特殊的日期引起了大家的注意：2020 年 2 月 2 日。</p><p>因为如果将这个日期按 “yyyymmdd” 的格式写成一个 8 位数是 20200202，恰好是一个回文数。</p><p>我们称这样的日期是回文日期。</p><p>有人表示 20200202 是“千年一遇” 的特殊日子。</p><p>对此小明很不认同，因为不到 2 年之后就是下一个回文日期：20211202 即 2021 年 12 月 2 日。</p><p>也有人表示 20200202 并不仅仅是一个回文日期，还是一个 ABABBABA 型的回文日期。</p><p>对此小明也不认同，因为大约 100 年后就能遇到下一个 ABABBABA 型的回文日期：21211212 即 2121 年 12 月 12 日。</p><p>算不上“千年一遇”，顶多算“千年两遇”。</p><p>给定一个 8 位数的日期，请你计算该日期之后下一个回文日期和下一个 ABABBABA 型的回文日期各是哪一天.<br><strong>注意</strong><br>下一个回文日期和下一个 ABABBABA 型的回文日期可能是同一天。</p><p>ABABBABA 型的回文日期，需要满足 A≠B。<br><strong>输入格式</strong><br>输入包含一个八位整数 N，表示日期。<br><strong>输出格式</strong><br>输出两行，每行 1 个八位数。</p><p>第一行表示下一个回文日期，第二行表示下一个 ABABBABA 型的回文日期。<br><strong>数据范围</strong><br>对于所有评测用例，10000101≤N≤89991231，保证 N 是一个合法日期的 8 位数表示。<br><strong>输入样例</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">20200202</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">20211202</span><br><span class="line">21211212</span><br></pre></td></tr></table></figure><p><strong>思路</strong><br>  依次枚举判断该日期是否为回文日期和ABABABAB类型回文日期,找到输出即可</p><p><strong>ACcode</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> D[<span class="number">13</span>]=&#123;<span class="number">0</span>,<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">checkdate</span><span class="params">(<span class="type">int</span> date)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> y = date /<span class="number">10000</span>;</span><br><span class="line">    <span class="type">int</span> m = date%<span class="number">10000</span>/<span class="number">100</span>;</span><br><span class="line">    <span class="type">int</span> d = date%<span class="number">100</span>;</span><br><span class="line">    <span class="keyword">if</span>(m &lt; <span class="number">1</span> || m &gt; <span class="number">12</span> || d == <span class="number">0</span> || (d &gt; D[m] &amp;&amp; d != <span class="number">2</span>)) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span>(d == <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>((y % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; y % <span class="number">100</span> != <span class="number">0</span>) || y % <span class="number">4</span> == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">              <span class="keyword">if</span>(d &gt; <span class="number">29</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(d &gt; <span class="number">28</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">checkhuiwen</span><span class="params">(string s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>,j = s.<span class="built_in">size</span>() - <span class="number">1</span>; i &lt; j ; i ++,j --)</span><br><span class="line">    <span class="keyword">if</span>(s[i] != s[j]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">checkABhuiwen</span><span class="params">(string s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">checkhuiwen</span>(s)) <span class="comment">//ABAB</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(s[<span class="number">0</span>] == s[<span class="number">1</span>] ||s[<span class="number">0</span>] != s[<span class="number">2</span>] || s[<span class="number">1</span>] != s[<span class="number">3</span>]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="type">int</span> flag = <span class="number">0</span>; <span class="comment">//标记一下只能输出一个普通回文日期</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span>  i = n + <span class="number">1</span>; ; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">checkdate</span>(i))</span><br><span class="line">        &#123;</span><br><span class="line">            string s= <span class="built_in">to_string</span>(i);</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">checkhuiwen</span>(s)&amp;&amp; flag == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                cout&lt;&lt;i&lt;&lt;endl;</span><br><span class="line">                flag = <span class="number">1</span>; <span class="comment">// 普通回文日期已经输出</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">checkABhuiwen</span>(s)) &#123;</span><br><span class="line">                cout&lt;&lt;i&lt;&lt;endl;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;   <span class="comment">// 找到直接return 0;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>问题</strong><br>为什么这样写在ACwing可以过,洛谷和蓝桥杯不可以过???</p><h4 id="编程5-特别数的和"><a href="#编程5-特别数的和" class="headerlink" title="编程5:特别数的和"></a>编程5:特别数的和</h4><p><a href="https://www.acwing.com/problem/content/1247/">原题链接</a><br><strong>描述</strong><br>小明对数位中含有 2、0、1、9 的数字很感兴趣（不包括前导 0），在 1 到 40 中这样的数包括 1、2、9、10 至 32、39 和 40，共 28 个，他们的和是 574。</p><p>请问，在 1 到 n 中，所有这样的数的和是多少？<br><strong>输入格式</strong><br>共一行，包含一个整数 n。<br><strong>输出格式</strong><br>共一行，包含一个整数，表示满足条件的数的和。<br><strong>数据范围</strong><br>1≤n≤10000<br><strong>样例输入</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">40</span><br></pre></td></tr></table></figure><p><strong>样例输出</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">574</span><br></pre></td></tr></table></figure><p><strong>思路</strong><br>  从1~依次枚举,对每个数进行处理判断是否含有2 0 1 9,含有加入答案, 遍历一边输出答案</p><p><strong>ACcode</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x = i;</span><br><span class="line">        <span class="keyword">while</span>(x) <span class="comment">//对这个数从个位枚举</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(x % <span class="number">10</span> == <span class="number">2</span> || x % <span class="number">10</span> == <span class="number">0</span> || x % <span class="number">10</span> == <span class="number">1</span> || x % <span class="number">10</span> == <span class="number">9</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                res += i;</span><br><span class="line">                <span class="keyword">break</span>; <span class="comment">//记得跳出对这个数的处理，不然会可能会重复加上这个数字 </span></span><br><span class="line">                       <span class="comment">//例如（2019）会加上4次</span></span><br><span class="line">            &#125;</span><br><span class="line">            x = x /<span class="number">10</span>; <span class="comment">//删去个位</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;res&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第三章搜索"><a href="#第三章搜索" class="headerlink" title="第三章搜索"></a>第三章搜索</h3><h4 id="编程1：走迷宫"><a href="#编程1：走迷宫" class="headerlink" title="编程1：走迷宫"></a>编程1：走迷宫</h4><p><a href="https://www.acwing.com/problem/content/846/">原题链接</a><br><strong>描述</strong><br>给定一个 n×m 的二维整数数组，用来表示一个迷宫，数组中只包含 0 或 1，其中 0 表示可以走的路，1 表示不可通过的墙壁。</p><p>最初，有一个人位于左上角 (1,1) 处，已知该人每次可以向上、下、左、右任意一个方向移动一个位置。</p><p>请问，该人从左上角移动至右下角 (n,m) 处，至少需要移动多少次。</p><p>数据保证 (1,1) 处和 (n,m) 处的数字为 0，且一定至少存在一条通路。<br><strong>输入格式</strong><br>第一行包含两个整数 n 和 m。</p><p>接下来 n 行，每行包含 m 个整数（0 或 1），表示完整的二维数组迷宫。<br><strong>输出格式</strong><br>输出一个整数，表示从左上角移动至右下角的最少移动次数。<br><strong>数据范围</strong><br>1≤n,m≤100<br><strong>输入样例</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">5 5</span><br><span class="line">0 1 0 0 0</span><br><span class="line">0 1 0 1 0</span><br><span class="line">0 0 0 0 0</span><br><span class="line">0 1 1 1 0</span><br><span class="line">0 0 0 1 0</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">8</span><br></pre></td></tr></table></figure><p><strong>思路</strong><br>  从起点开始走，每次走一步就记录一下所能走到的点，并且记录一下从原点到该点所需步数，之后从上一步所能走到的点开始走下一步<br>  设地图为g[][],每个位置从（0，0）开始走所需步数d[][];<br>  例如 从起点（0，0）开始找到下一步能走的位置g[1][0],走到该位置的步数是d[1][0] &#x3D; 1;<br>  然后从g[1][0]开始搜索下一步能走到的位置g[2][0],走到该位置的步数是d[2][0] &#x3D; d[1][0] + 1 &#x3D; 2;        然后从g[2][0]开始搜索下一步能走到的位置g[2][1],走到该位置的步数是d[2][1] &#x3D;d[2][0] +1 &#x3D; 3;<br>  还能走到g[3][0],走到该位置的步数是d[3][0] &#x3D; d[2][0] + 1 &#x3D; 3;<br>  然后从g[2][1] g[3][0]开始搜索下一步能走到位置 g[2][2],d[2][2]&#x3D;d[2][1] +1 &#x3D; 4 和g[4][0],d[4][0]&#x3D; d[3][0] + 1 &#x3D; 4;<br>  一直按照这种搜索搜索全部地图</p><p>  搜索时，搜到下一步能走到的位置可以加入队列，每次搜索取队头元素，用临时变量存一下，然后删除队头元素，知道队头元素为空时，搜索就结束了</p><p><strong>ACcode</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span> <span class="comment">//menset</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">110</span>;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> g[N][N],d[N][N];<span class="comment">//g数组来存储地图，d数组记录从原点到每个能走到的点的距离</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(d,<span class="number">-1</span>,<span class="built_in">sizeof</span>(d)); <span class="comment">//将d数组全部初始化为-1;目的是判断该点是否被走过</span></span><br><span class="line">    d[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">0</span>; </span><br><span class="line">    queue &lt;PII&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(&#123;<span class="number">0</span>,<span class="number">0</span>&#125;);  <span class="comment">//从（0，0）开始</span></span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>()) <span class="comment">//队列不为空</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">auto</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>(); </span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 上右边下左进行搜索</span></span><br><span class="line">        <span class="type">int</span> dx[] = &#123;<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>&#125;;</span><br><span class="line">        <span class="type">int</span> dy[] = &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i ++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> x = t.first + dx[i], y  = t.second + dy[i];</span><br><span class="line">            <span class="keyword">if</span>(x &gt;=<span class="number">0</span> &amp;&amp; x &lt; n &amp;&amp; y &gt;=<span class="number">0</span> &amp;&amp; y &lt; m &amp;&amp; g[x][y] == <span class="number">0</span> &amp;&amp; d[x][y] == - <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                d[x][y] = d[t.first][t.second] + <span class="number">1</span>;</span><br><span class="line">                q.<span class="built_in">push</span>(&#123;x,y&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//输入地图</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n; i ++)</span><br><span class="line">      <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">          cin&gt;&gt;g[i][j];</span><br><span class="line">          </span><br><span class="line">    <span class="built_in">bfs</span>();</span><br><span class="line">    cout&lt;&lt;d[n<span class="number">-1</span>][m<span class="number">-1</span>]&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 习题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 蓝桥杯 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
